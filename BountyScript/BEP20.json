{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "mintable",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_msgSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/melikyan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "3": "contracts/BEP20.sol",
    "5": "interfaces/IBEP20.sol"
  },
  "ast": {
    "absolutePath": "contracts/BEP20.sol",
    "exportedSymbols": {
      "BEP20": [
        666
      ]
    },
    "id": 667,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "interfaces/IBEP20.sol",
        "file": "../interfaces/IBEP20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 667,
        "sourceUnit": 1223,
        "src": "25:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/melikyan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 667,
        "sourceUnit": 1139,
        "src": "60:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "IBEP20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1222,
              "src": "131:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBEP20_$1222",
                "typeString": "contract IBEP20"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "131:6:3"
          }
        ],
        "contractDependencies": [
          1222
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 666,
        "linearizedBaseContracts": [
          666,
          1222
        ],
        "name": "BEP20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "contractScope": null,
              "id": 6,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1138,
              "src": "150:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1138",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "144:27:3",
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "163:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 666,
            "src": "177:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "186:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "177:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 10,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "197:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 18,
            "mutability": "mutable",
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 666,
            "src": "229:69:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "238:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "229:49:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 16,
                "keyType": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "258:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "249:28:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "269:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 20,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 666,
            "src": "304:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "304:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 666,
            "src": "338:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 21,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "338:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 666,
            "src": "364:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 23,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "364:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 666,
            "src": "392:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 25,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "392:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 666,
            "src": "422:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 27,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "422:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 34,
            "name": "OwnershipTransferred",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 34,
                  "src": "477:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 34,
                  "src": "508:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "476:57:3"
            },
            "src": "450:84:3"
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "_mintable",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 666,
            "src": "540:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 35,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "540:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "677:179:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "687:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 50,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "696:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "696:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "687:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "687:19:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 54,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "716:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 55,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "724:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "716:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "716:12:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 58,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "738:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 59,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "748:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "738:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "738:16:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 62,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "764:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "776:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "764:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "764:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 66,
                      "name": "_mintable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "794:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 67,
                      "name": "mintable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "806:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "794:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "794:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 71,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "830:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "830:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "842:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 70,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "824:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "824:25:3"
                }
              ]
            },
            "documentation": null,
            "id": 77,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "581:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "601:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "623:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "639:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "mintable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "655:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "580:89:3"
            },
            "returnParameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "677:0:3"
            },
            "scope": 666,
            "src": "569:287:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "909:34:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "926:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "926:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 81,
                  "id": 84,
                  "nodeType": "Return",
                  "src": "919:17:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "119df25f",
            "id": 86,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "881:2:3"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 86,
                  "src": "900:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "899:9:3"
            },
            "scope": 666,
            "src": "862:81:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1052:95:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "1070:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 91,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "1080:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1080:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1070:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1094:34:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1062:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1062:67:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1062:67:3"
                },
                {
                  "id": 97,
                  "nodeType": "PlaceholderStatement",
                  "src": "1139:1:3"
                }
              ]
            },
            "documentation": {
              "id": 87,
              "nodeType": "StructuredDocumentation",
              "src": "949:77:3",
              "text": " @dev Throws if called by any account other than the owner."
            },
            "id": 99,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1049:2:3"
            },
            "src": "1031:116:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1529:91:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1565:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1581:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1573:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 107,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1573:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1573:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 105,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1544:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1544:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "EmitStatement",
                  "src": "1539:45:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 113,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1594:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1611:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1603:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 114,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1603:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1603:10:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1594:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1594:19:3"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "1153:325:3",
              "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
            },
            "functionSelector": "715018a6",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 103,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 102,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 99,
                  "src": "1519:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1519:9:3"
              }
            ],
            "name": "renounceOwnership",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1509:2:3"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1529:0:3"
            },
            "scope": 666,
            "src": "1483:137:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1831:170:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 130,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "1849:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1869:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1861:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 131,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1861:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1861:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1849:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1873:40:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        },
                        "value": "Ownable: new owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1841:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1841:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1841:73:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1950:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 141,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "1958:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 139,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1929:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1929:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "EmitStatement",
                  "src": "1924:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 144,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1977:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "1986:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1977:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1977:17:3"
                }
              ]
            },
            "documentation": {
              "id": 122,
              "nodeType": "StructuredDocumentation",
              "src": "1626:138:3",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
            },
            "functionSelector": "f2fde38b",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 127,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 126,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 99,
                  "src": "1821:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1821:9:3"
              }
            ],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "1796:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1795:18:3"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1831:0:3"
            },
            "scope": 666,
            "src": "1769:232:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "2124:33:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 155,
                    "name": "_mintable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36,
                    "src": "2141:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 154,
                  "id": 156,
                  "nodeType": "Return",
                  "src": "2134:16:3"
                }
              ]
            },
            "documentation": {
              "id": 150,
              "nodeType": "StructuredDocumentation",
              "src": "2007:63:3",
              "text": " @dev Returns if the token is mintable or not"
            },
            "functionSelector": "4bf365df",
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintable",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2092:2:3"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 158,
                  "src": "2118:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2118:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2117:6:3"
            },
            "scope": 666,
            "src": "2075:82:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "2272:30:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 164,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28,
                    "src": "2289:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 163,
                  "id": 165,
                  "nodeType": "Return",
                  "src": "2282:13:3"
                }
              ]
            },
            "documentation": {
              "id": 159,
              "nodeType": "StructuredDocumentation",
              "src": "2163:52:3",
              "text": " @dev Returns the bep token owner."
            },
            "functionSelector": "893d20e8",
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2237:2:3"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 167,
                  "src": "2263:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2262:9:3"
            },
            "scope": 666,
            "src": "2220:82:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1171
            ],
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "2423:33:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 174,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26,
                    "src": "2440:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 173,
                  "id": 175,
                  "nodeType": "Return",
                  "src": "2433:16:3"
                }
              ]
            },
            "documentation": {
              "id": 168,
              "nodeType": "StructuredDocumentation",
              "src": "2308:51:3",
              "text": " @dev Returns the token decimals."
            },
            "functionSelector": "313ce567",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 170,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2393:8:3"
            },
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2381:2:3"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "2416:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2415:7:3"
            },
            "scope": 666,
            "src": "2364:92:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1166
            ],
            "body": {
              "id": 186,
              "nodeType": "Block",
              "src": "2581:31:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 184,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24,
                    "src": "2598:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 183,
                  "id": 185,
                  "nodeType": "Return",
                  "src": "2591:14:3"
                }
              ]
            },
            "documentation": {
              "id": 178,
              "nodeType": "StructuredDocumentation",
              "src": "2462:49:3",
              "text": " @dev Returns the token symbol."
            },
            "functionSelector": "95d89b41",
            "id": 187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 180,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2543:8:3"
            },
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2531:2:3"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 187,
                  "src": "2566:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2565:15:3"
            },
            "scope": 666,
            "src": "2516:96:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1161
            ],
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "2731:29:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 194,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22,
                    "src": "2748:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 193,
                  "id": 195,
                  "nodeType": "Return",
                  "src": "2741:12:3"
                }
              ]
            },
            "documentation": {
              "id": 188,
              "nodeType": "StructuredDocumentation",
              "src": "2618:45:3",
              "text": " @dev Returns the token name."
            },
            "functionSelector": "06fdde03",
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 190,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2693:8:3"
            },
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2681:2:3"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 197,
                  "src": "2716:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2715:15:3"
            },
            "scope": 666,
            "src": "2668:92:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1176
            ],
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "2883:36:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 204,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20,
                    "src": "2900:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 203,
                  "id": 205,
                  "nodeType": "Return",
                  "src": "2893:19:3"
                }
              ]
            },
            "documentation": {
              "id": 198,
              "nodeType": "StructuredDocumentation",
              "src": "2766:48:3",
              "text": " @dev See {BEP20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 200,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2851:8:3"
            },
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2839:2:3"
            },
            "returnParameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 207,
                  "src": "2874:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2874:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2873:9:3"
            },
            "scope": 666,
            "src": "2819:100:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1183
            ],
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "3053:42:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 216,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "3070:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 218,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 217,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "3080:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3070:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 215,
                  "id": 219,
                  "nodeType": "Return",
                  "src": "3063:25:3"
                }
              ]
            },
            "documentation": {
              "id": 208,
              "nodeType": "StructuredDocumentation",
              "src": "2925:46:3",
              "text": " @dev See {BEP20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 212,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3021:8:3"
            },
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 221,
                  "src": "2995:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2995:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2994:17:3"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 221,
                  "src": "3044:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3044:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3043:9:3"
            },
            "scope": 666,
            "src": "2976:119:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1210
            ],
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "3383:80:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 233,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "3403:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () returns (address)"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3403:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 235,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "3417:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "3428:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 232,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 499,
                      "src": "3393:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3393:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "3393:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3452:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 231,
                  "id": 240,
                  "nodeType": "Return",
                  "src": "3445:11:3"
                }
              ]
            },
            "documentation": {
              "id": 222,
              "nodeType": "StructuredDocumentation",
              "src": "3101:191:3",
              "text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 228,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3359:8:3"
            },
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "3315:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "3334:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3334:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3314:35:3"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "3377:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3377:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3376:6:3"
            },
            "scope": 666,
            "src": "3297:166:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1192
            ],
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "3612:51:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 253,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "3629:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 255,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 254,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "3641:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3629:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 257,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 256,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "3648:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3629:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 252,
                  "id": 258,
                  "nodeType": "Return",
                  "src": "3622:34:3"
                }
              ]
            },
            "documentation": {
              "id": 243,
              "nodeType": "StructuredDocumentation",
              "src": "3469:46:3",
              "text": " @dev See {BEP20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 249,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3580:8:3"
            },
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 260,
                  "src": "3539:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 260,
                  "src": "3554:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3554:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3538:32:3"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 260,
                  "src": "3603:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3602:9:3"
            },
            "scope": 666,
            "src": "3520:143:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1201
            ],
            "body": {
              "id": 280,
              "nodeType": "Block",
              "src": "3883:77:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 272,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "3902:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () returns (address)"
                          }
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3902:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 274,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "3916:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 275,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "3925:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 271,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 636,
                      "src": "3893:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3893:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "3893:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3949:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 270,
                  "id": 279,
                  "nodeType": "Return",
                  "src": "3942:11:3"
                }
              ]
            },
            "documentation": {
              "id": 261,
              "nodeType": "StructuredDocumentation",
              "src": "3669:126:3",
              "text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 267,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3859:8:3"
            },
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 281,
                  "src": "3817:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 281,
                  "src": "3834:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3834:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3816:33:3"
            },
            "returnParameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 281,
                  "src": "3877:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3877:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3876:6:3"
            },
            "scope": 666,
            "src": "3800:160:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1221
            ],
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "4523:161:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 295,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "4543:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 296,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "4551:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 297,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "4562:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 294,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 499,
                      "src": "4533:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4533:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "4533:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 301,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "4588:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 302,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "4596:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () returns (address)"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4596:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 311,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "4648:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 304,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "4610:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 306,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 305,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 284,
                                "src": "4622:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4610:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 309,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 307,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86,
                                "src": "4630:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                  "typeString": "function () returns (address)"
                                }
                              },
                              "id": 308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4630:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4610:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 987,
                          "src": "4610:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4610:45:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 300,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 636,
                      "src": "4579:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4579:77:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "4579:77:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4673:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 293,
                  "id": 316,
                  "nodeType": "Return",
                  "src": "4666:11:3"
                }
              ]
            },
            "documentation": {
              "id": 282,
              "nodeType": "StructuredDocumentation",
              "src": "3966:446:3",
              "text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 290,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4499:8:3"
            },
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 318,
                  "src": "4439:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4439:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 318,
                  "src": "4455:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4455:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 318,
                  "src": "4474:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4474:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4438:51:3"
            },
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 318,
                  "src": "4517:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4517:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4516:6:3"
            },
            "scope": 666,
            "src": "4417:267:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 345,
              "nodeType": "Block",
              "src": "5164:121:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 329,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "5183:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () returns (address)"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5183:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 331,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "5197:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 339,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "5245:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 332,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "5206:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 335,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 333,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "5218:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                    "typeString": "function () returns (address)"
                                  }
                                },
                                "id": 334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5218:12:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5206:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 337,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 336,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 321,
                              "src": "5232:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5206:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 965,
                          "src": "5206:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5206:50:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 328,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 636,
                      "src": "5174:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5174:83:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "5174:83:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5274:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 327,
                  "id": 344,
                  "nodeType": "Return",
                  "src": "5267:11:3"
                }
              ]
            },
            "documentation": {
              "id": 319,
              "nodeType": "StructuredDocumentation",
              "src": "4690:383:3",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 346,
                  "src": "5105:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5105:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 346,
                  "src": "5122:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5122:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5104:37:3"
            },
            "returnParameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 346,
                  "src": "5158:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5158:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5157:6:3"
            },
            "scope": 666,
            "src": "5078:207:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "5862:126:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 357,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "5881:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () returns (address)"
                          }
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5881:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 359,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "5895:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 367,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "5943:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 360,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "5904:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 363,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 361,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "5916:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                    "typeString": "function () returns (address)"
                                  }
                                },
                                "id": 362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5916:12:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5904:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 365,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 364,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "5930:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5904:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 987,
                          "src": "5904:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5904:55:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 356,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 636,
                      "src": "5872:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5872:88:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "5872:88:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5977:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 355,
                  "id": 372,
                  "nodeType": "Return",
                  "src": "5970:11:3"
                }
              ]
            },
            "documentation": {
              "id": 347,
              "nodeType": "StructuredDocumentation",
              "src": "5291:475:3",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 349,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 374,
                  "src": "5798:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5798:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 374,
                  "src": "5815:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5815:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5797:42:3"
            },
            "returnParameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 354,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 374,
                  "src": "5856:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5856:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5855:6:3"
            },
            "scope": 666,
            "src": "5771:217:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 397,
              "nodeType": "Block",
              "src": "6292:123:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 385,
                        "name": "_mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "6310:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468697320746f6b656e206973206e6f74206d696e7461626c65",
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6321:28:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
                          "typeString": "literal_string \"this token is not mintable\""
                        },
                        "value": "this token is not mintable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
                          "typeString": "literal_string \"this token is not mintable\""
                        }
                      ],
                      "id": 384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6302:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6302:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "6302:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 390,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "6366:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () returns (address)"
                          }
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6366:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 392,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "6380:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 389,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "6360:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6360:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "6360:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6404:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 383,
                  "id": 396,
                  "nodeType": "Return",
                  "src": "6397:11:3"
                }
              ]
            },
            "documentation": {
              "id": 375,
              "nodeType": "StructuredDocumentation",
              "src": "5994:231:3",
              "text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner\n - `_mintable` must be true"
            },
            "functionSelector": "a0712d68",
            "id": 398,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 380,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 379,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 99,
                  "src": "6267:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6267:9:3"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 398,
                  "src": "6244:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6244:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6243:16:3"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 398,
                  "src": "6286:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6286:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6285:6:3"
            },
            "scope": 666,
            "src": "6230:185:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 422,
              "nodeType": "Block",
              "src": "6739:120:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 411,
                        "name": "_mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "6757:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468697320746f6b656e206973206e6f74206d696e7461626c65",
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6768:28:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
                          "typeString": "literal_string \"this token is not mintable\""
                        },
                        "value": "this token is not mintable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
                          "typeString": "literal_string \"this token is not mintable\""
                        }
                      ],
                      "id": 410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6749:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6749:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "6749:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 416,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "6813:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 417,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "6824:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 415,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "6807:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6807:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "6807:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6848:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 409,
                  "id": 421,
                  "nodeType": "Return",
                  "src": "6841:11:3"
                }
              ]
            },
            "documentation": {
              "id": 399,
              "nodeType": "StructuredDocumentation",
              "src": "6421:230:3",
              "text": " @dev Creates `amount` tokens and assigns them to `recipient`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner\n - `_mintable` must be true"
            },
            "functionSelector": "b723b34e",
            "id": 423,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 406,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 405,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 99,
                  "src": "6714:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6714:9:3"
              }
            ],
            "name": "mintTo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 423,
                  "src": "6672:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6672:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 403,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 423,
                  "src": "6688:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6688:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6671:35:3"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 423,
                  "src": "6733:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6733:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6732:6:3"
            },
            "scope": 666,
            "src": "6656:203:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "6998:65:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 432,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "7014:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () returns (address)"
                          }
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7014:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 434,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "7028:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 431,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 591,
                      "src": "7008:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7008:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "7008:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7052:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 430,
                  "id": 438,
                  "nodeType": "Return",
                  "src": "7045:11:3"
                }
              ]
            },
            "documentation": {
              "id": 424,
              "nodeType": "StructuredDocumentation",
              "src": "6866:75:3",
              "text": " @dev Burn `amount` tokens and decreasing the total supply."
            },
            "functionSelector": "42966c68",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 426,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 440,
                  "src": "6960:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6960:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6959:16:3"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 440,
                  "src": "6992:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6992:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6991:6:3"
            },
            "scope": 666,
            "src": "6946:117:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 498,
              "nodeType": "Block",
              "src": "7616:343:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 451,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 443,
                          "src": "7634:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7652:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7644:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 452,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7644:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7644:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7634:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7656:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
                          "typeString": "literal_string \"BEP20: transfer from the zero address\""
                        },
                        "value": "BEP20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
                          "typeString": "literal_string \"BEP20: transfer from the zero address\""
                        }
                      ],
                      "id": 450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7626:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7626:70:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "7626:70:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 461,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "7714:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7735:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7727:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7727:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7727:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7714:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7739:37:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
                          "typeString": "literal_string \"BEP20: transfer to the zero address\""
                        },
                        "value": "BEP20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
                          "typeString": "literal_string \"BEP20: transfer to the zero address\""
                        }
                      ],
                      "id": 460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7706:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7706:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "7706:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 470,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "7788:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 472,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 471,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 443,
                        "src": "7798:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7788:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 477,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 447,
                          "src": "7830:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 473,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "7808:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 475,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 474,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "7818:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7808:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 987,
                        "src": "7808:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7808:29:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7788:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "7788:49:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 481,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "7847:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 483,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 482,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "7857:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7847:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 488,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 447,
                          "src": "7895:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 484,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "7870:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 486,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 485,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 445,
                            "src": "7880:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7870:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 965,
                        "src": "7870:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7870:32:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7847:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "7847:55:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 493,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 443,
                        "src": "7926:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 494,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "7934:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 495,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 447,
                        "src": "7945:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 492,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1156,
                      "src": "7917:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7917:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "EmitStatement",
                  "src": "7912:40:3"
                }
              ]
            },
            "documentation": {
              "id": 441,
              "nodeType": "StructuredDocumentation",
              "src": "7069:463:3",
              "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 499,
                  "src": "7556:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7556:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 499,
                  "src": "7572:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7572:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 499,
                  "src": "7591:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7591:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7555:51:3"
            },
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7616:0:3"
            },
            "scope": 666,
            "src": "7537:422:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "8286:245:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 508,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 502,
                          "src": "8304:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8323:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8315:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 509,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8315:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8315:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "8304:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8327:33:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
                          "typeString": "literal_string \"BEP20: mint to the zero address\""
                        },
                        "value": "BEP20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
                          "typeString": "literal_string \"BEP20: mint to the zero address\""
                        }
                      ],
                      "id": 507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8296:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8296:65:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "8296:65:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 517,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "8372:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 520,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 504,
                          "src": "8404:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 518,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "8387:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 965,
                        "src": "8387:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8387:24:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8372:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "8372:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 524,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "8421:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 526,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 525,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "8431:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8421:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 531,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 504,
                          "src": "8465:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 527,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "8442:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 529,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 528,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "8452:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8442:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 965,
                        "src": "8442:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8442:30:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8421:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 534,
                  "nodeType": "ExpressionStatement",
                  "src": "8421:51:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8504:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8496:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 536,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8496:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8496:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 540,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "8508:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 541,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "8517:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 535,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1156,
                      "src": "8487:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8487:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 543,
                  "nodeType": "EmitStatement",
                  "src": "8482:42:3"
                }
              ]
            },
            "documentation": {
              "id": 500,
              "nodeType": "StructuredDocumentation",
              "src": "7965:259:3",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
            },
            "id": 545,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 502,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 545,
                  "src": "8244:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8244:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 545,
                  "src": "8261:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8261:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8243:33:3"
            },
            "returnParameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8286:0:3"
            },
            "scope": 666,
            "src": "8229:302:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 590,
              "nodeType": "Block",
              "src": "8907:247:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 554,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "8925:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8944:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8936:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 555,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8936:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8936:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "8925:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8948:35:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
                          "typeString": "literal_string \"BEP20: burn from the zero address\""
                        },
                        "value": "BEP20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
                          "typeString": "literal_string \"BEP20: burn from the zero address\""
                        }
                      ],
                      "id": 553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8917:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8917:67:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 562,
                  "nodeType": "ExpressionStatement",
                  "src": "8917:67:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 563,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "8995:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 565,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 564,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "9005:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8995:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 570,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "9039:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 566,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "9016:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 568,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 567,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "9026:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9016:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 987,
                        "src": "9016:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9016:30:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8995:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 573,
                  "nodeType": "ExpressionStatement",
                  "src": "8995:51:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 574,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "9056:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 577,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "9088:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 575,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "9071:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 987,
                        "src": "9071:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9071:24:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9056:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 580,
                  "nodeType": "ExpressionStatement",
                  "src": "9056:39:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 582,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "9119:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9136:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9128:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 583,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9128:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9128:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 587,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "9140:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 581,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1156,
                      "src": "9110:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9110:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 589,
                  "nodeType": "EmitStatement",
                  "src": "9105:42:3"
                }
              ]
            },
            "documentation": {
              "id": 546,
              "nodeType": "StructuredDocumentation",
              "src": "8537:308:3",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 591,
                  "src": "8865:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8865:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 550,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 591,
                  "src": "8882:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8882:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8864:33:3"
            },
            "returnParameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8907:0:3"
            },
            "scope": 666,
            "src": "8850:304:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 635,
              "nodeType": "Block",
              "src": "9654:257:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 602,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "9672:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9689:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9681:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 603,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9681:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9681:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9672:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9693:38:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
                          "typeString": "literal_string \"BEP20: approve from the zero address\""
                        },
                        "value": "BEP20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
                          "typeString": "literal_string \"BEP20: approve from the zero address\""
                        }
                      ],
                      "id": 601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9664:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9664:68:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "9664:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 612,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "9750:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9769:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9761:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 613,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9761:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9761:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9750:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9773:36:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
                          "typeString": "literal_string \"BEP20: approve to the zero address\""
                        },
                        "value": "BEP20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
                          "typeString": "literal_string \"BEP20: approve to the zero address\""
                        }
                      ],
                      "id": 611,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9742:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9742:68:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 620,
                  "nodeType": "ExpressionStatement",
                  "src": "9742:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 621,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "9821:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 624,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 622,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "9833:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9821:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 625,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 623,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "9840:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9821:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 626,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 598,
                      "src": "9851:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9821:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "9821:36:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 630,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 594,
                        "src": "9881:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 631,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "9888:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 632,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "9897:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 629,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "9872:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9872:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 634,
                  "nodeType": "EmitStatement",
                  "src": "9867:37:3"
                }
              ]
            },
            "documentation": {
              "id": 592,
              "nodeType": "StructuredDocumentation",
              "src": "9160:414:3",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 636,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 594,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 636,
                  "src": "9597:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9597:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 636,
                  "src": "9612:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9612:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 598,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 636,
                  "src": "9629:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 597,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9629:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9596:48:3"
            },
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9654:0:3"
            },
            "scope": 666,
            "src": "9579:332:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 664,
              "nodeType": "Block",
              "src": "10150:128:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 645,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "10166:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 646,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 641,
                        "src": "10175:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 644,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 591,
                      "src": "10160:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10160:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "10160:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "10201:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 651,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "10210:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () returns (address)"
                          }
                        },
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10210:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 660,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 641,
                            "src": "10263:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 653,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "10224:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 655,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 654,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 639,
                                "src": "10236:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10224:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 658,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 656,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86,
                                "src": "10245:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                  "typeString": "function () returns (address)"
                                }
                              },
                              "id": 657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10245:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10224:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 987,
                          "src": "10224:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10224:46:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 649,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 636,
                      "src": "10192:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10192:79:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "10192:79:3"
                }
              ]
            },
            "documentation": {
              "id": 637,
              "nodeType": "StructuredDocumentation",
              "src": "9917:167:3",
              "text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
            },
            "id": 665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnFrom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 665,
                  "src": "10108:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10108:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 641,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 665,
                  "src": "10125:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10125:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10107:33:3"
            },
            "returnParameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10150:0:3"
            },
            "scope": 666,
            "src": "10089:189:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 667,
        "src": "113:10167:3"
      }
    ],
    "src": "0:10280:3"
  },
  "bytecode": "",
  "bytecodeSha1": "c184f5326df3e00b09e72bb7d72198aa1c6138e2",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.0+commit.9e61f92b"
  },
  "contractName": "BEP20",
  "coverageMap": {
    "branches": {
      "1": {
        "SafeMath.add": {
          "59": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.sub": {
          "60": [
            3221,
            3227,
            true
          ]
        }
      },
      "3": {
        "BEP20._approve": {
          "53": [
            9672,
            9691,
            true
          ],
          "54": [
            9750,
            9771,
            true
          ]
        },
        "BEP20._burn": {
          "57": [
            8925,
            8946,
            true
          ]
        },
        "BEP20._mint": {
          "58": [
            8304,
            8325,
            true
          ]
        },
        "BEP20._transfer": {
          "55": [
            7634,
            7654,
            true
          ],
          "56": [
            7714,
            7737,
            true
          ]
        },
        "BEP20.mint": {
          "49": [
            6310,
            6319,
            true
          ]
        },
        "BEP20.mintTo": {
          "50": [
            6757,
            6766,
            true
          ]
        },
        "BEP20.transferOwnership": {
          "51": [
            1070,
            1092,
            true
          ],
          "52": [
            1849,
            1871,
            true
          ]
        }
      },
      "5": {}
    },
    "statements": {
      "1": {
        "SafeMath.add": {
          "28": [
            2794,
            2840
          ],
          "29": [
            2850,
            2858
          ]
        },
        "SafeMath.sub": {
          "39": [
            3213,
            3262
          ],
          "40": [
            3272,
            3284
          ]
        }
      },
      "3": {
        "BEP20._approve": {
          "30": [
            9664,
            9732
          ],
          "31": [
            9742,
            9810
          ],
          "32": [
            9821,
            9857
          ],
          "33": [
            9867,
            9904
          ]
        },
        "BEP20._burn": {
          "41": [
            8917,
            8984
          ],
          "42": [
            8995,
            9046
          ],
          "43": [
            9056,
            9095
          ],
          "44": [
            9105,
            9147
          ]
        },
        "BEP20._mint": {
          "45": [
            8296,
            8361
          ],
          "46": [
            8372,
            8411
          ],
          "47": [
            8421,
            8472
          ],
          "48": [
            8482,
            8524
          ]
        },
        "BEP20._msgSender": {
          "3": [
            919,
            936
          ]
        },
        "BEP20._transfer": {
          "34": [
            7626,
            7696
          ],
          "35": [
            7706,
            7777
          ],
          "36": [
            7788,
            7837
          ],
          "37": [
            7847,
            7902
          ],
          "38": [
            7912,
            7952
          ]
        },
        "BEP20.allowance": {
          "24": [
            3622,
            3656
          ]
        },
        "BEP20.approve": {
          "1": [
            3893,
            3932
          ],
          "2": [
            3942,
            3953
          ]
        },
        "BEP20.balanceOf": {
          "13": [
            3063,
            3088
          ]
        },
        "BEP20.burn": {
          "10": [
            7008,
            7035
          ],
          "11": [
            7045,
            7056
          ]
        },
        "BEP20.decimals": {
          "8": [
            2433,
            2449
          ]
        },
        "BEP20.decreaseAllowance": {
          "20": [
            5872,
            5960
          ]
        },
        "BEP20.getOwner": {
          "16": [
            2282,
            2295
          ]
        },
        "BEP20.increaseAllowance": {
          "9": [
            5174,
            5257
          ]
        },
        "BEP20.mint": {
          "18": [
            6302,
            6350
          ],
          "19": [
            6360,
            6387
          ]
        },
        "BEP20.mintTo": {
          "22": [
            6749,
            6797
          ],
          "23": [
            6807,
            6831
          ]
        },
        "BEP20.mintable": {
          "12": [
            2134,
            2150
          ]
        },
        "BEP20.name": {
          "0": [
            2741,
            2753
          ]
        },
        "BEP20.renounceOwnership": {
          "14": [
            1539,
            1584
          ],
          "15": [
            1594,
            1613
          ]
        },
        "BEP20.symbol": {
          "17": [
            2591,
            2605
          ]
        },
        "BEP20.totalSupply": {
          "4": [
            2893,
            2912
          ]
        },
        "BEP20.transfer": {
          "21": [
            3393,
            3435
          ]
        },
        "BEP20.transferFrom": {
          "5": [
            4533,
            4569
          ],
          "6": [
            4579,
            4656
          ],
          "7": [
            4666,
            4677
          ]
        },
        "BEP20.transferOwnership": {
          "25": [
            1841,
            1914
          ],
          "26": [
            1924,
            1967
          ],
          "27": [
            1977,
            1994
          ]
        }
      },
      "5": {}
    }
  },
  "dependencies": [
    "IBEP20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a457c2d711610071578063a457c2d714610323578063a9059cbb1461034f578063b723b34e1461037b578063dd62ed3e146103a7578063f2fde38b146103d557610121565b806370a08231146102c6578063715018a6146102ec578063893d20e8146102f657806395d89b41146102fe578063a0712d681461030657610121565b806323b872dd116100f457806323b872dd14610221578063313ce56714610257578063395093511461027557806342966c68146102a15780634bf365df146102be57610121565b806306fdde0314610126578063095ea7b3146101a3578063119df25f146101e357806318160ddd14610207575b600080fd5b61012e6103fb565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610168578181015183820152602001610150565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101cf600480360360408110156101b957600080fd5b506001600160a01b038135169060200135610491565b604080519115158252519081900360200190f35b6101eb6104ae565b604080516001600160a01b039092168252519081900360200190f35b61020f6104b2565b60408051918252519081900360200190f35b6101cf6004803603606081101561023757600080fd5b506001600160a01b038135811691602081013590911690604001356104b8565b61025f610527565b6040805160ff9092168252519081900360200190f35b6101cf6004803603604081101561028b57600080fd5b506001600160a01b038135169060200135610530565b6101cf600480360360208110156102b757600080fd5b503561057e565b6101cf610599565b61020f600480360360208110156102dc57600080fd5b50356001600160a01b03166105a9565b6102f46105c4565b005b6101eb610671565b61012e610685565b6101cf6004803603602081101561031c57600080fd5b50356106e6565b6101cf6004803603604081101561033957600080fd5b506001600160a01b0381351690602001356107b4565b6101cf6004803603604081101561036557600080fd5b506001600160a01b038135169060200135610802565b6101cf6004803603604081101561039157600080fd5b50803590602001356001600160a01b0316610816565b61020f600480360360408110156103bd57600080fd5b506001600160a01b03813581169160200135166108dd565b6102f4600480360360208110156103eb57600080fd5b50356001600160a01b0316610908565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104875780601f1061045c57610100808354040283529160200191610487565b820191906000526020600020905b81548152906001019060200180831161046a57829003601f168201915b5050505050905090565b60006104a561049e6104ae565b8484610a72565b50600192915050565b3390565b60025490565b60006104c5848484610b5e565b61051d846104d16104ae565b6001600160a01b0387166000908152600160205260408120610518918791906104f86104ae565b6001600160a01b0316815260208101919091526040016000205490610c94565b610a72565b5060019392505050565b60055460ff1690565b60006104a561053d6104ae565b84610518856001600061054e6104ae565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610a11565b600061059161058b6104ae565b83610cf1565b506001919050565b600554600160a81b900460ff1690565b6001600160a01b031660009081526020819052604090205490565b6105cc6104ae565b60055461010090046001600160a01b03908116911614610621576040805162461bcd60e51b81526020600482018190526024820152600080516020610f1b833981519152604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104875780601f1061045c57610100808354040283529160200191610487565b60006106f06104ae565b60055461010090046001600160a01b03908116911614610745576040805162461bcd60e51b81526020600482018190526024820152600080516020610f1b833981519152604482015290519081900360640190fd5b600554600160a81b900460ff166107a3576040805162461bcd60e51b815260206004820152601a60248201527f7468697320746f6b656e206973206e6f74206d696e7461626c65000000000000604482015290519081900360640190fd5b6105916107ae6104ae565b83610dc7565b60006104a56107c16104ae565b8461051885600160006107d26104ae565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610c94565b60006104a561080f6104ae565b8484610b5e565b60006108206104ae565b60055461010090046001600160a01b03908116911614610875576040805162461bcd60e51b81526020600482018190526024820152600080516020610f1b833981519152604482015290519081900360640190fd5b600554600160a81b900460ff166108d3576040805162461bcd60e51b815260206004820152601a60248201527f7468697320746f6b656e206973206e6f74206d696e7461626c65000000000000604482015290519081900360640190fd5b6104a58284610dc7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6109106104ae565b60055461010090046001600160a01b03908116911614610965576040805162461bcd60e51b81526020600482018190526024820152600080516020610f1b833981519152604482015290519081900360640190fd5b6001600160a01b0381166109aa5760405162461bcd60e51b8152600401808060200182810382526026815260200180610ef56026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b600082820183811015610a6b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038316610ab75760405162461bcd60e51b8152600401808060200182810382526024815260200180610ed16024913960400191505060405180910390fd5b6001600160a01b038216610afc5760405162461bcd60e51b8152600401808060200182810382526022815260200180610f7f6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610ba35760405162461bcd60e51b8152600401808060200182810382526025815260200180610eac6025913960400191505060405180910390fd5b6001600160a01b038216610be85760405162461bcd60e51b8152600401808060200182810382526023815260200180610f3b6023913960400191505060405180910390fd5b6001600160a01b038316600090815260208190526040902054610c0b9082610c94565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610c3a9082610a11565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610ceb576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6001600160a01b038216610d365760405162461bcd60e51b8152600401808060200182810382526021815260200180610f5e6021913960400191505060405180910390fd5b6001600160a01b038216600090815260208190526040902054610d599082610c94565b6001600160a01b038316600090815260208190526040902055600254610d7f9082610c94565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b038216610e22576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610e2f9082610a11565b6002556001600160a01b038216600090815260208190526040902054610e559082610a11565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657242455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a20617070726f766520746f20746865207a65726f2061646472657373a2646970667358221220b29a355cb2ac396c39e2f8692dacb9e64ffa01aa2077b36bafc8b644f0f9871d64736f6c63430007000033",
  "deployedSourceMap": "113:10167:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2668:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3800:160;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3800:160:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;862:81;;;:::i;:::-;;;;-1:-1:-1;;;;;862:81:3;;;;;;;;;;;;;;2819:100;;;:::i;:::-;;;;;;;;;;;;;;;;4417:267;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4417:267:3;;;;;;;;;;;;;;;;;:::i;2364:92::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5078:207;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5078:207:3;;;;;;;;:::i;6946:117::-;;;;;;;;;;;;;;;;-1:-1:-1;6946:117:3;;:::i;2075:82::-;;;:::i;2976:119::-;;;;;;;;;;;;;;;;-1:-1:-1;2976:119:3;-1:-1:-1;;;;;2976:119:3;;:::i;1483:137::-;;;:::i;:::-;;2220:82;;;:::i;2516:96::-;;;:::i;6230:185::-;;;;;;;;;;;;;;;;-1:-1:-1;6230:185:3;;:::i;5771:217::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5771:217:3;;;;;;;;:::i;3297:166::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3297:166:3;;;;;;;;:::i;6656:203::-;;;;;;;;;;;;;;;;-1:-1:-1;6656:203:3;;;;;;-1:-1:-1;;;;;6656:203:3;;:::i;3520:143::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3520:143:3;;;;;;;;;;:::i;1769:232::-;;;;;;;;;;;;;;;;-1:-1:-1;1769:232:3;-1:-1:-1;;;;;1769:232:3;;:::i;2668:92::-;2748:5;2741:12;;;;;;;;-1:-1:-1;;2741:12:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:13;;2741:12;;2748:5;;2741:12;;2748:5;2741:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2668:92;:::o;3800:160::-;3877:4;3893:39;3902:12;:10;:12::i;:::-;3916:7;3925:6;3893:8;:39::i;:::-;-1:-1:-1;3949:4:3;3800:160;;;;:::o;862:81::-;926:10;862:81;:::o;2819:100::-;2900:12;;2819:100;:::o;4417:267::-;4517:4;4533:36;4543:6;4551:9;4562:6;4533:9;:36::i;:::-;4579:77;4588:6;4596:12;:10;:12::i;:::-;-1:-1:-1;;;;;4610:19:3;;;;;;:11;:19;;;;;:45;;4648:6;;4610:19;4630:12;:10;:12::i;:::-;-1:-1:-1;;;;;4610:33:3;;;;;;;;;;;;-1:-1:-1;4610:33:3;;;:37;:45::i;:::-;4579:8;:77::i;:::-;-1:-1:-1;4673:4:3;4417:267;;;;;:::o;2364:92::-;2440:9;;;;2364:92;:::o;5078:207::-;5158:4;5174:83;5183:12;:10;:12::i;:::-;5197:7;5206:50;5245:10;5206:11;:25;5218:12;:10;:12::i;:::-;-1:-1:-1;;;;;5206:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;5206:25:3;;;:34;;;;;;;;;;;:38;:50::i;6946:117::-;6992:4;7008:27;7014:12;:10;:12::i;:::-;7028:6;7008:5;:27::i;:::-;-1:-1:-1;7052:4:3;6946:117;;;:::o;2075:82::-;2141:9;;-1:-1:-1;;;2141:9:3;;;;;2075:82::o;2976:119::-;-1:-1:-1;;;;;3070:18:3;3044:7;3070:18;;;;;;;;;;;;2976:119::o;1483:137::-;1080:12;:10;:12::i;:::-;1070:6;;;;;-1:-1:-1;;;;;1070:6:3;;;:22;;;1062:67;;;;;-1:-1:-1;;;1062:67:3;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1062:67:3;;;;;;;;;;;;;;;1565:6:::1;::::0;1544:40:::1;::::0;1581:1:::1;::::0;1565:6:::1;::::0;::::1;-1:-1:-1::0;;;;;1565:6:3::1;::::0;1544:40:::1;::::0;1581:1;;1544:40:::1;1594:6;:19:::0;;-1:-1:-1;;;;;;1594:19:3::1;::::0;;1483:137::o;2220:82::-;2289:6;;;;;-1:-1:-1;;;;;2289:6:3;;2220:82::o;2516:96::-;2598:7;2591:14;;;;;;;;-1:-1:-1;;2591:14:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2566:13;;2591:14;;2598:7;;2591:14;;2598:7;2591:14;;;;;;;;;;;;;;;;;;;;;;;;6230:185;6286:4;1080:12;:10;:12::i;:::-;1070:6;;;;;-1:-1:-1;;;;;1070:6:3;;;:22;;;1062:67;;;;;-1:-1:-1;;;1062:67:3;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1062:67:3;;;;;;;;;;;;;;;6310:9:::1;::::0;-1:-1:-1;;;6310:9:3;::::1;;;6302:48;;;::::0;;-1:-1:-1;;;6302:48:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;6360:27;6366:12;:10;:12::i;:::-;6380:6;6360:5;:27::i;5771:217::-:0;5856:4;5872:88;5881:12;:10;:12::i;:::-;5895:7;5904:55;5943:15;5904:11;:25;5916:12;:10;:12::i;:::-;-1:-1:-1;;;;;5904:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;5904:25:3;;;:34;;;;;;;;;;;:38;:55::i;3297:166::-;3377:4;3393:42;3403:12;:10;:12::i;:::-;3417:9;3428:6;3393:9;:42::i;6656:203::-;6733:4;1080:12;:10;:12::i;:::-;1070:6;;;;;-1:-1:-1;;;;;1070:6:3;;;:22;;;1062:67;;;;;-1:-1:-1;;;1062:67:3;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1062:67:3;;;;;;;;;;;;;;;6757:9:::1;::::0;-1:-1:-1;;;6757:9:3;::::1;;;6749:48;;;::::0;;-1:-1:-1;;;6749:48:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;6807:24;6813:9;6824:6;6807:5;:24::i;3520:143::-:0;-1:-1:-1;;;;;3629:18:3;;;3603:7;3629:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3520:143::o;1769:232::-;1080:12;:10;:12::i;:::-;1070:6;;;;;-1:-1:-1;;;;;1070:6:3;;;:22;;;1062:67;;;;;-1:-1:-1;;;1062:67:3;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1062:67:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;1849:22:3;::::1;1841:73;;;;-1:-1:-1::0;;;1841:73:3::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1950:6;::::0;1929:38:::1;::::0;-1:-1:-1;;;;;1929:38:3;;::::1;::::0;1950:6:::1;::::0;::::1;;::::0;1929:38:::1;::::0;;;::::1;1977:6;:17:::0;;-1:-1:-1;;;;;1977:17:3;;::::1;;;-1:-1:-1::0;;;;;;1977:17:3;;::::1;::::0;;;::::1;::::0;;1769:232::o;2690:175:1:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:1:o;9579:332:3:-;-1:-1:-1;;;;;9672:19:3;;9664:68;;;;-1:-1:-1;;;9664:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9750:21:3;;9742:68;;;;-1:-1:-1;;;9742:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9821:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9872:32;;;;;;;;;;;;;;;;;9579:332;;;:::o;7537:422::-;-1:-1:-1;;;;;7634:20:3;;7626:70;;;;-1:-1:-1;;;7626:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7714:23:3;;7706:71;;;;-1:-1:-1;;;7706:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7808:17:3;;:9;:17;;;;;;;;;;;:29;;7830:6;7808:21;:29::i;:::-;-1:-1:-1;;;;;7788:17:3;;;:9;:17;;;;;;;;;;;:49;;;;7870:20;;;;;;;:32;;7895:6;7870:24;:32::i;:::-;-1:-1:-1;;;;;7847:20:3;;;:9;:20;;;;;;;;;;;;:55;;;;7917:35;;;;;;;7847:20;;7917:35;;;;;;;;;;;;;7537:422;;;:::o;3136:155:1:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:1;;;3136:155::o;8850:304:3:-;-1:-1:-1;;;;;8925:21:3;;8917:67;;;;-1:-1:-1;;;8917:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9016:18:3;;:9;:18;;;;;;;;;;;:30;;9039:6;9016:22;:30::i;:::-;-1:-1:-1;;;;;8995:18:3;;:9;:18;;;;;;;;;;:51;9071:12;;:24;;9088:6;9071:16;:24::i;:::-;9056:12;:39;9110:37;;;;;;;;9136:1;;-1:-1:-1;;;;;9110:37:3;;;;;;;;;;;;8850:304;;:::o;8229:302::-;-1:-1:-1;;;;;8304:21:3;;8296:65;;;;;-1:-1:-1;;;8296:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;8387:12;;:24;;8404:6;8387:16;:24::i;:::-;8372:12;:39;-1:-1:-1;;;;;8442:18:3;;:9;:18;;;;;;;;;;;:30;;8465:6;8442:22;:30::i;:::-;-1:-1:-1;;;;;8421:18:3;;:9;:18;;;;;;;;;;;:51;;;;8487:37;;;;;;;8421:18;;:9;;8487:37;;;;;;;;;;8229:302;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {BEP20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {BEP20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burn `amount` tokens and decreasing the total supply."
      },
      "decimals()": {
        "details": "Returns the token decimals."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getOwner()": {
        "details": "Returns the bep token owner."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(uint256)": {
        "details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true"
      },
      "mintTo(uint256,address)": {
        "details": "Creates `amount` tokens and assigns them to `recipient`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true"
      },
      "mintable()": {
        "details": "Returns if the token is mintable or not"
      },
      "name()": {
        "details": "Returns the token name."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the token symbol."
      },
      "totalSupply()": {
        "details": "See {BEP20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    113,
    10280
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xB723B34E EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D5 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x306 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x4BF365DF EQ PUSH2 0x2BE JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x119DF25F EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x207 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x168 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x195 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x530 JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x57E JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x599 JUMP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x2F4 PUSH2 0x5C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH2 0x671 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x685 JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x802 JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x816 JUMP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x908 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x487 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x487 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A5 PUSH2 0x49E PUSH2 0x4AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA72 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C5 DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x51D DUP5 PUSH2 0x4D1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x518 SWAP2 DUP8 SWAP2 SWAP1 PUSH2 0x4F8 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH2 0xC94 JUMP JUMPDEST PUSH2 0xA72 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A5 PUSH2 0x53D PUSH2 0x4AE JUMP JUMPDEST DUP5 PUSH2 0x518 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x54E PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x591 PUSH2 0x58B PUSH2 0x4AE JUMP JUMPDEST DUP4 PUSH2 0xCF1 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5CC PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x621 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x487 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F0 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x745 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x591 PUSH2 0x7AE PUSH2 0x4AE JUMP JUMPDEST DUP4 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A5 PUSH2 0x7C1 PUSH2 0x4AE JUMP JUMPDEST DUP5 PUSH2 0x518 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x7D2 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A5 PUSH2 0x80F PUSH2 0x4AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x820 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x875 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8D3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4A5 DUP3 DUP5 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x910 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x965 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xEF5 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xA6B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xED1 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF7F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xEAC PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF3B PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC0B SWAP1 DUP3 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xC3A SWAP1 DUP3 PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xCEB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF5E PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD59 SWAP1 DUP3 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0xD7F SWAP1 DUP3 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE22 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xE2F SWAP1 DUP3 PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE55 SWAP1 DUP3 PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E657242455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0xA2646970667358221220B29A355CB2AC396C39E2 0xF8 PUSH10 0x2DACB9E64FFA01AA2077 0xB3 PUSH12 0xAFC8B644F0F9871D64736F6C PUSH4 0x43000700 STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        113,
        10280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x121"
    },
    "25": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD"
    },
    "42": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA457C2D7"
    },
    "49": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "GT",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA457C2D7"
    },
    "60": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x323"
    },
    "64": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "71": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34F"
    },
    "75": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB723B34E"
    },
    "82": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37B"
    },
    "86": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "97": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "105": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D5"
    },
    "108": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "109": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x121"
    },
    "112": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMP",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C6"
    },
    "124": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x715018A6"
    },
    "131": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC"
    },
    "135": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x893D20E8"
    },
    "142": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "143": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F6"
    },
    "146": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95D89B41"
    },
    "153": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "154": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FE"
    },
    "157": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "158": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA0712D68"
    },
    "164": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "165": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x306"
    },
    "168": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "169": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x121"
    },
    "172": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMP",
      "path": "3"
    },
    "173": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "GT",
      "path": "3"
    },
    "181": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "185": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x221"
    },
    "195": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "197": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x313CE567"
    },
    "202": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "203": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x257"
    },
    "206": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x39509351"
    },
    "213": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "214": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x275"
    },
    "217": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "218": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "219": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x42966C68"
    },
    "224": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "225": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A1"
    },
    "228": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "229": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "230": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4BF365DF"
    },
    "235": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "236": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BE"
    },
    "239": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "240": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x121"
    },
    "243": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMP",
      "path": "3"
    },
    "244": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "245": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "246": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6FDDE03"
    },
    "251": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "252": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x126"
    },
    "255": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "256": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "257": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "262": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "263": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A3"
    },
    "266": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "267": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "268": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x119DF25F"
    },
    "273": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "274": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E3"
    },
    "277": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "278": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "279": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x18160DDD"
    },
    "284": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "EQ",
      "path": "3"
    },
    "285": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x207"
    },
    "288": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "289": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "290": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "292": {
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "DUP1",
      "path": "3"
    },
    "293": {
      "first_revert": true,
      "fn": null,
      "offset": [
        113,
        10280
      ],
      "op": "REVERT",
      "path": "3"
    },
    "294": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "295": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12E"
    },
    "298": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FB"
    },
    "301": {
      "fn": "BEP20.name",
      "jump": "i",
      "offset": [
        2668,
        2760
      ],
      "op": "JUMP",
      "path": "3"
    },
    "302": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "303": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "305": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "306": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "307": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "309": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "310": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP3",
      "path": "3"
    },
    "311": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "312": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP4",
      "path": "3"
    },
    "313": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "314": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP2",
      "path": "3"
    },
    "315": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP4",
      "path": "3"
    },
    "316": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "ADD",
      "path": "3"
    },
    "317": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "318": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP4",
      "path": "3"
    },
    "319": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "320": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "321": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "322": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP4",
      "path": "3"
    },
    "323": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "324": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "325": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP4",
      "path": "3"
    },
    "326": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "ADD",
      "path": "3"
    },
    "327": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "328": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP6",
      "path": "3"
    },
    "329": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "ADD",
      "path": "3"
    },
    "330": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "331": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "332": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP4",
      "path": "3"
    },
    "333": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP4",
      "path": "3"
    },
    "334": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "336": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "337": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP4",
      "path": "3"
    },
    "338": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP2",
      "path": "3"
    },
    "339": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "LT",
      "path": "3"
    },
    "340": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "341": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x168"
    },
    "344": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "345": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP2",
      "path": "3"
    },
    "346": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP2",
      "path": "3"
    },
    "347": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "ADD",
      "path": "3"
    },
    "348": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "349": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP4",
      "path": "3"
    },
    "350": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP3",
      "path": "3"
    },
    "351": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "ADD",
      "path": "3"
    },
    "352": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "353": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "355": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "ADD",
      "path": "3"
    },
    "356": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x150"
    },
    "359": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "JUMP",
      "path": "3"
    },
    "360": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "361": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "POP",
      "path": "3"
    },
    "362": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "POP",
      "path": "3"
    },
    "363": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "POP",
      "path": "3"
    },
    "364": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "POP",
      "path": "3"
    },
    "365": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "366": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "POP",
      "path": "3"
    },
    "367": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "368": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP2",
      "path": "3"
    },
    "369": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "ADD",
      "path": "3"
    },
    "370": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "371": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "373": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "AND",
      "path": "3"
    },
    "374": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "375": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "376": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x195"
    },
    "379": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "380": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "381": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP3",
      "path": "3"
    },
    "382": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SUB",
      "path": "3"
    },
    "383": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "384": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "385": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "387": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP4",
      "path": "3"
    },
    "388": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "390": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SUB",
      "path": "3"
    },
    "391": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "394": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "EXP",
      "path": "3"
    },
    "395": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SUB",
      "path": "3"
    },
    "396": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "NOT",
      "path": "3"
    },
    "397": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "AND",
      "path": "3"
    },
    "398": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP2",
      "path": "3"
    },
    "399": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "400": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "402": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "ADD",
      "path": "3"
    },
    "403": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "404": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "POP",
      "path": "3"
    },
    "405": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "406": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "POP",
      "path": "3"
    },
    "407": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "408": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "POP",
      "path": "3"
    },
    "409": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "POP",
      "path": "3"
    },
    "410": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "POP",
      "path": "3"
    },
    "411": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "413": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "414": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "415": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "416": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SUB",
      "path": "3"
    },
    "417": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "418": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "RETURN",
      "path": "3"
    },
    "419": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "420": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CF"
    },
    "423": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "425": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "426": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "427": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "SUB",
      "path": "3"
    },
    "428": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "430": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "431": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "LT",
      "path": "3"
    },
    "432": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "433": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B9"
    },
    "436": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "437": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "439": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "440": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "REVERT",
      "path": "3"
    },
    "441": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "442": {
      "op": "POP"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "449": {
      "op": "SHL"
    },
    "450": {
      "op": "SUB"
    },
    "451": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "452": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "453": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "AND",
      "path": "3"
    },
    "454": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "455": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "457": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "ADD",
      "path": "3"
    },
    "458": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "459": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x491"
    },
    "462": {
      "fn": "BEP20.approve",
      "jump": "i",
      "offset": [
        3800,
        3960
      ],
      "op": "JUMP",
      "path": "3"
    },
    "463": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "464": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "466": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "467": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "468": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "469": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "470": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "471": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "DUP3",
      "path": "3"
    },
    "472": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "473": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "474": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "475": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "476": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "477": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "SUB",
      "path": "3"
    },
    "478": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "480": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "ADD",
      "path": "3"
    },
    "481": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "482": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "RETURN",
      "path": "3"
    },
    "483": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "484": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB"
    },
    "487": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "490": {
      "fn": "BEP20._msgSender",
      "jump": "i",
      "offset": [
        862,
        943
      ],
      "op": "JUMP",
      "path": "3"
    },
    "491": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "492": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "494": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "DUP1",
      "path": "3"
    },
    "495": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "502": {
      "op": "SHL"
    },
    "503": {
      "op": "SUB"
    },
    "504": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "505": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "506": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "AND",
      "path": "3"
    },
    "507": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "DUP3",
      "path": "3"
    },
    "508": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "509": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "510": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "511": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "DUP2",
      "path": "3"
    },
    "512": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "513": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "SUB",
      "path": "3"
    },
    "514": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "516": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "ADD",
      "path": "3"
    },
    "517": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "518": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "RETURN",
      "path": "3"
    },
    "519": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "520": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20F"
    },
    "523": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B2"
    },
    "526": {
      "fn": "BEP20.totalSupply",
      "jump": "i",
      "offset": [
        2819,
        2919
      ],
      "op": "JUMP",
      "path": "3"
    },
    "527": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "528": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "530": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "DUP1",
      "path": "3"
    },
    "531": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "532": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "533": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "DUP3",
      "path": "3"
    },
    "534": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "535": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "536": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "537": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "DUP2",
      "path": "3"
    },
    "538": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "539": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "SUB",
      "path": "3"
    },
    "540": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "542": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "ADD",
      "path": "3"
    },
    "543": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "544": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "RETURN",
      "path": "3"
    },
    "545": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "546": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CF"
    },
    "549": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "551": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "DUP1",
      "path": "3"
    },
    "552": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "553": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "SUB",
      "path": "3"
    },
    "554": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "556": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "DUP2",
      "path": "3"
    },
    "557": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "LT",
      "path": "3"
    },
    "558": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "559": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x237"
    },
    "562": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "563": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "565": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "DUP1",
      "path": "3"
    },
    "566": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "REVERT",
      "path": "3"
    },
    "567": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "568": {
      "op": "POP"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "575": {
      "op": "SHL"
    },
    "576": {
      "op": "SUB"
    },
    "577": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "DUP2",
      "path": "3"
    },
    "578": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "579": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "DUP2",
      "path": "3"
    },
    "580": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "AND",
      "path": "3"
    },
    "581": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "582": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "584": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "DUP2",
      "path": "3"
    },
    "585": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "ADD",
      "path": "3"
    },
    "586": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "587": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "588": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "589": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "AND",
      "path": "3"
    },
    "590": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "591": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "593": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "ADD",
      "path": "3"
    },
    "594": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "595": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B8"
    },
    "598": {
      "fn": "BEP20.transferFrom",
      "jump": "i",
      "offset": [
        4417,
        4684
      ],
      "op": "JUMP",
      "path": "3"
    },
    "599": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "600": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25F"
    },
    "603": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x527"
    },
    "606": {
      "fn": "BEP20.decimals",
      "jump": "i",
      "offset": [
        2364,
        2456
      ],
      "op": "JUMP",
      "path": "3"
    },
    "607": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "608": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "610": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "DUP1",
      "path": "3"
    },
    "611": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "612": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "614": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "615": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "616": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "AND",
      "path": "3"
    },
    "617": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "DUP3",
      "path": "3"
    },
    "618": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "619": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "620": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "621": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "DUP2",
      "path": "3"
    },
    "622": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "623": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "SUB",
      "path": "3"
    },
    "624": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "626": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "ADD",
      "path": "3"
    },
    "627": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "628": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "RETURN",
      "path": "3"
    },
    "629": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "630": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CF"
    },
    "633": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "635": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "DUP1",
      "path": "3"
    },
    "636": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "637": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "SUB",
      "path": "3"
    },
    "638": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "640": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "DUP2",
      "path": "3"
    },
    "641": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "LT",
      "path": "3"
    },
    "642": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "643": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28B"
    },
    "646": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "647": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "649": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "DUP1",
      "path": "3"
    },
    "650": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "REVERT",
      "path": "3"
    },
    "651": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "652": {
      "op": "POP"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "659": {
      "op": "SHL"
    },
    "660": {
      "op": "SUB"
    },
    "661": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "DUP2",
      "path": "3"
    },
    "662": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "663": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "AND",
      "path": "3"
    },
    "664": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "665": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "667": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "ADD",
      "path": "3"
    },
    "668": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "669": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x530"
    },
    "672": {
      "fn": "BEP20.increaseAllowance",
      "jump": "i",
      "offset": [
        5078,
        5285
      ],
      "op": "JUMP",
      "path": "3"
    },
    "673": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "674": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CF"
    },
    "677": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "679": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "DUP1",
      "path": "3"
    },
    "680": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "681": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "SUB",
      "path": "3"
    },
    "682": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "684": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "DUP2",
      "path": "3"
    },
    "685": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "LT",
      "path": "3"
    },
    "686": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "687": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B7"
    },
    "690": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "691": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "693": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "DUP1",
      "path": "3"
    },
    "694": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "REVERT",
      "path": "3"
    },
    "695": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "696": {
      "op": "POP"
    },
    "697": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "698": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57E"
    },
    "701": {
      "fn": "BEP20.burn",
      "jump": "i",
      "offset": [
        6946,
        7063
      ],
      "op": "JUMP",
      "path": "3"
    },
    "702": {
      "fn": "BEP20.mintable",
      "offset": [
        2075,
        2157
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "703": {
      "fn": "BEP20.mintable",
      "offset": [
        2075,
        2157
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CF"
    },
    "706": {
      "fn": "BEP20.mintable",
      "offset": [
        2075,
        2157
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x599"
    },
    "709": {
      "fn": "BEP20.mintable",
      "jump": "i",
      "offset": [
        2075,
        2157
      ],
      "op": "JUMP",
      "path": "3"
    },
    "710": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "711": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20F"
    },
    "714": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "716": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "DUP1",
      "path": "3"
    },
    "717": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "718": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "SUB",
      "path": "3"
    },
    "719": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "721": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "DUP2",
      "path": "3"
    },
    "722": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "LT",
      "path": "3"
    },
    "723": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "724": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DC"
    },
    "727": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "728": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "730": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "DUP1",
      "path": "3"
    },
    "731": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "REVERT",
      "path": "3"
    },
    "732": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "733": {
      "op": "POP"
    },
    "734": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "741": {
      "op": "SHL"
    },
    "742": {
      "op": "SUB"
    },
    "743": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "AND",
      "path": "3"
    },
    "744": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A9"
    },
    "747": {
      "fn": "BEP20.balanceOf",
      "jump": "i",
      "offset": [
        2976,
        3095
      ],
      "op": "JUMP",
      "path": "3"
    },
    "748": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1483,
        1620
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "749": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1483,
        1620
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F4"
    },
    "752": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1483,
        1620
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C4"
    },
    "755": {
      "fn": "BEP20.renounceOwnership",
      "jump": "i",
      "offset": [
        1483,
        1620
      ],
      "op": "JUMP",
      "path": "3"
    },
    "756": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1483,
        1620
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "757": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1483,
        1620
      ],
      "op": "STOP",
      "path": "3"
    },
    "758": {
      "fn": "BEP20.getOwner",
      "offset": [
        2220,
        2302
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "759": {
      "fn": "BEP20.getOwner",
      "offset": [
        2220,
        2302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB"
    },
    "762": {
      "fn": "BEP20.getOwner",
      "offset": [
        2220,
        2302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x671"
    },
    "765": {
      "fn": "BEP20.getOwner",
      "jump": "i",
      "offset": [
        2220,
        2302
      ],
      "op": "JUMP",
      "path": "3"
    },
    "766": {
      "fn": "BEP20.symbol",
      "offset": [
        2516,
        2612
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "767": {
      "fn": "BEP20.symbol",
      "offset": [
        2516,
        2612
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12E"
    },
    "770": {
      "fn": "BEP20.symbol",
      "offset": [
        2516,
        2612
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x685"
    },
    "773": {
      "fn": "BEP20.symbol",
      "jump": "i",
      "offset": [
        2516,
        2612
      ],
      "op": "JUMP",
      "path": "3"
    },
    "774": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "775": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CF"
    },
    "778": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "780": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "DUP1",
      "path": "3"
    },
    "781": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "782": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "SUB",
      "path": "3"
    },
    "783": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "785": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "DUP2",
      "path": "3"
    },
    "786": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "LT",
      "path": "3"
    },
    "787": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "788": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31C"
    },
    "791": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "792": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "794": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "DUP1",
      "path": "3"
    },
    "795": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "REVERT",
      "path": "3"
    },
    "796": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "797": {
      "op": "POP"
    },
    "798": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "799": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E6"
    },
    "802": {
      "fn": "BEP20.mint",
      "jump": "i",
      "offset": [
        6230,
        6415
      ],
      "op": "JUMP",
      "path": "3"
    },
    "803": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "804": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CF"
    },
    "807": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "809": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "DUP1",
      "path": "3"
    },
    "810": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "811": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "SUB",
      "path": "3"
    },
    "812": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "814": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "DUP2",
      "path": "3"
    },
    "815": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "LT",
      "path": "3"
    },
    "816": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "817": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x339"
    },
    "820": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "821": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "823": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "DUP1",
      "path": "3"
    },
    "824": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "REVERT",
      "path": "3"
    },
    "825": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "833": {
      "op": "SHL"
    },
    "834": {
      "op": "SUB"
    },
    "835": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "DUP2",
      "path": "3"
    },
    "836": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "837": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "AND",
      "path": "3"
    },
    "838": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "839": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "841": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "ADD",
      "path": "3"
    },
    "842": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "843": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7B4"
    },
    "846": {
      "fn": "BEP20.decreaseAllowance",
      "jump": "i",
      "offset": [
        5771,
        5988
      ],
      "op": "JUMP",
      "path": "3"
    },
    "847": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "848": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CF"
    },
    "851": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "853": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "DUP1",
      "path": "3"
    },
    "854": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "855": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "SUB",
      "path": "3"
    },
    "856": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "858": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "DUP2",
      "path": "3"
    },
    "859": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "LT",
      "path": "3"
    },
    "860": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "861": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x365"
    },
    "864": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "865": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "867": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "DUP1",
      "path": "3"
    },
    "868": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "REVERT",
      "path": "3"
    },
    "869": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "870": {
      "op": "POP"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "877": {
      "op": "SHL"
    },
    "878": {
      "op": "SUB"
    },
    "879": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "DUP2",
      "path": "3"
    },
    "880": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "881": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "AND",
      "path": "3"
    },
    "882": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "883": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "885": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "ADD",
      "path": "3"
    },
    "886": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "887": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x802"
    },
    "890": {
      "fn": "BEP20.transfer",
      "jump": "i",
      "offset": [
        3297,
        3463
      ],
      "op": "JUMP",
      "path": "3"
    },
    "891": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "892": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CF"
    },
    "895": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "897": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "DUP1",
      "path": "3"
    },
    "898": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "899": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "SUB",
      "path": "3"
    },
    "900": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "902": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "DUP2",
      "path": "3"
    },
    "903": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "LT",
      "path": "3"
    },
    "904": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "905": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391"
    },
    "908": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "909": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "911": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "DUP1",
      "path": "3"
    },
    "912": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "REVERT",
      "path": "3"
    },
    "913": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "914": {
      "op": "POP"
    },
    "915": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "DUP1",
      "path": "3"
    },
    "916": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "917": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "918": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "920": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "ADD",
      "path": "3"
    },
    "921": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "928": {
      "op": "SHL"
    },
    "929": {
      "op": "SUB"
    },
    "930": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "AND",
      "path": "3"
    },
    "931": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x816"
    },
    "934": {
      "fn": "BEP20.mintTo",
      "jump": "i",
      "offset": [
        6656,
        6859
      ],
      "op": "JUMP",
      "path": "3"
    },
    "935": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "936": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20F"
    },
    "939": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "941": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "DUP1",
      "path": "3"
    },
    "942": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "943": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "SUB",
      "path": "3"
    },
    "944": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "946": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "DUP2",
      "path": "3"
    },
    "947": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "LT",
      "path": "3"
    },
    "948": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "949": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BD"
    },
    "952": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "953": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "955": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "DUP1",
      "path": "3"
    },
    "956": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "REVERT",
      "path": "3"
    },
    "957": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "958": {
      "op": "POP"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "DUP2",
      "path": "3"
    },
    "968": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "969": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "DUP2",
      "path": "3"
    },
    "970": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "AND",
      "path": "3"
    },
    "971": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "972": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "974": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "ADD",
      "path": "3"
    },
    "975": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "976": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "AND",
      "path": "3"
    },
    "977": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8DD"
    },
    "980": {
      "fn": "BEP20.allowance",
      "jump": "i",
      "offset": [
        3520,
        3663
      ],
      "op": "JUMP",
      "path": "3"
    },
    "981": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "982": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F4"
    },
    "985": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "987": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "DUP1",
      "path": "3"
    },
    "988": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "989": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "SUB",
      "path": "3"
    },
    "990": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "992": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "DUP2",
      "path": "3"
    },
    "993": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "LT",
      "path": "3"
    },
    "994": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "995": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3EB"
    },
    "998": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "999": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1001": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1002": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1003": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1012": {
      "op": "SHL"
    },
    "1013": {
      "op": "SUB"
    },
    "1014": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "AND",
      "path": "3"
    },
    "1015": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x908"
    },
    "1018": {
      "fn": "BEP20.transferOwnership",
      "jump": "i",
      "offset": [
        1769,
        2001
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1019": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1020": {
      "fn": "BEP20.name",
      "offset": [
        2748,
        2753
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x3"
    },
    "1022": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1023": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1024": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1026": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1027": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1028": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1030": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1032": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1036": {
      "op": "NOT"
    },
    "1037": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1040": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1042": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1043": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "AND",
      "path": "3"
    },
    "1044": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1045": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "MUL",
      "path": "3"
    },
    "1046": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "ADD",
      "path": "3"
    },
    "1047": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1048": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1049": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "AND",
      "path": "3"
    },
    "1050": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1051": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1052": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1053": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DIV",
      "path": "3"
    },
    "1054": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1055": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1056": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "ADD",
      "path": "3"
    },
    "1057": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1058": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1059": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DIV",
      "path": "3"
    },
    "1060": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1061": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "MUL",
      "path": "3"
    },
    "1062": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1063": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "ADD",
      "path": "3"
    },
    "1064": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1065": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "ADD",
      "path": "3"
    },
    "1066": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1067": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1068": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1069": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1070": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1071": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1072": {
      "fn": "BEP20.name",
      "offset": [
        2716,
        2729
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1074": {
      "fn": "BEP20.name",
      "offset": [
        2716,
        2729
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1075": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1076": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1077": {
      "fn": "BEP20.name",
      "offset": [
        2748,
        2753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1078": {
      "fn": "BEP20.name",
      "offset": [
        2748,
        2753
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1079": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1080": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "ADD",
      "path": "3"
    },
    "1081": {
      "fn": "BEP20.name",
      "offset": [
        2748,
        2753
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1082": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1083": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1084": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1085": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x487"
    },
    "1088": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1089": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1090": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1092": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "LT",
      "path": "3"
    },
    "1093": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45C"
    },
    "1096": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1097": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1100": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1101": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1102": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1103": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DIV",
      "path": "3"
    },
    "1104": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "MUL",
      "path": "3"
    },
    "1105": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1106": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1107": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1108": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1110": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "ADD",
      "path": "3"
    },
    "1111": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1112": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x487"
    },
    "1115": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1116": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1117": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1118": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "ADD",
      "path": "3"
    },
    "1119": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1120": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1121": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1123": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1124": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1126": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1128": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1129": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1130": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1131": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1132": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1133": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1134": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1135": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1136": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1138": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "ADD",
      "path": "3"
    },
    "1139": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1140": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1142": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "ADD",
      "path": "3"
    },
    "1143": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1144": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1145": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "GT",
      "path": "3"
    },
    "1146": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46A"
    },
    "1149": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1150": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1151": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1152": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SUB",
      "path": "3"
    },
    "1153": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1155": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "AND",
      "path": "3"
    },
    "1156": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1157": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "ADD",
      "path": "3"
    },
    "1158": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1159": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1160": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "POP",
      "path": "3"
    },
    "1161": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "POP",
      "path": "3"
    },
    "1162": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "POP",
      "path": "3"
    },
    "1163": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "POP",
      "path": "3"
    },
    "1164": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "POP",
      "path": "3"
    },
    "1165": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1166": {
      "fn": "BEP20.name",
      "offset": [
        2741,
        2753
      ],
      "op": "POP",
      "path": "3"
    },
    "1167": {
      "fn": "BEP20.name",
      "offset": [
        2668,
        2760
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1168": {
      "fn": "BEP20.name",
      "jump": "o",
      "offset": [
        2668,
        2760
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1169": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1170": {
      "fn": "BEP20.approve",
      "offset": [
        3877,
        3881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1172": {
      "fn": "BEP20.approve",
      "offset": [
        3893,
        3932
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 1,
      "value": "0x4A5"
    },
    "1175": {
      "fn": "BEP20.approve",
      "offset": [
        3902,
        3914
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x49E"
    },
    "1178": {
      "fn": "BEP20.approve",
      "offset": [
        3902,
        3912
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "1181": {
      "fn": "BEP20.approve",
      "jump": "i",
      "offset": [
        3902,
        3914
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1182": {
      "fn": "BEP20.approve",
      "offset": [
        3902,
        3914
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1183": {
      "fn": "BEP20.approve",
      "offset": [
        3916,
        3923
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1184": {
      "fn": "BEP20.approve",
      "offset": [
        3925,
        3931
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1185": {
      "fn": "BEP20.approve",
      "offset": [
        3893,
        3901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA72"
    },
    "1188": {
      "fn": "BEP20.approve",
      "jump": "i",
      "offset": [
        3893,
        3932
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1189": {
      "fn": "BEP20.approve",
      "offset": [
        3893,
        3932
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1190": {
      "op": "POP"
    },
    "1191": {
      "fn": "BEP20.approve",
      "offset": [
        3949,
        3953
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x1"
    },
    "1193": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1194": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1195": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "POP",
      "path": "3"
    },
    "1196": {
      "fn": "BEP20.approve",
      "offset": [
        3800,
        3960
      ],
      "op": "POP",
      "path": "3"
    },
    "1197": {
      "fn": "BEP20.approve",
      "jump": "o",
      "offset": [
        3800,
        3960
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1198": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1199": {
      "fn": "BEP20._msgSender",
      "offset": [
        926,
        936
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 3
    },
    "1200": {
      "fn": "BEP20._msgSender",
      "offset": [
        862,
        943
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1201": {
      "fn": "BEP20._msgSender",
      "jump": "o",
      "offset": [
        862,
        943
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1202": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1203": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2900,
        2912
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x2"
    },
    "1205": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2900,
        2912
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1206": {
      "fn": "BEP20.totalSupply",
      "offset": [
        2819,
        2919
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1207": {
      "fn": "BEP20.totalSupply",
      "jump": "o",
      "offset": [
        2819,
        2919
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1208": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1209": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4517,
        4521
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1211": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4533,
        4569
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 5,
      "value": "0x4C5"
    },
    "1214": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4543,
        4549
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1215": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4551,
        4560
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1216": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4562,
        4568
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1217": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4533,
        4542
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB5E"
    },
    "1220": {
      "fn": "BEP20.transferFrom",
      "jump": "i",
      "offset": [
        4533,
        4569
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1221": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4533,
        4569
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1222": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4579,
        4656
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 6,
      "value": "0x51D"
    },
    "1225": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4588,
        4594
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1226": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D1"
    },
    "1229": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4596,
        4606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "1232": {
      "fn": "BEP20.transferFrom",
      "jump": "i",
      "offset": [
        4596,
        4608
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1233": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4596,
        4608
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1240": {
      "op": "SHL"
    },
    "1241": {
      "op": "SUB"
    },
    "1242": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4629
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1243": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4629
      ],
      "op": "AND",
      "path": "3"
    },
    "1244": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1246": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1247": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4629
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1248": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4629
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1249": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1251": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1253": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4629
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1254": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1256": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4629
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1257": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4629
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1258": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4655
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x518"
    },
    "1261": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4655
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1262": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4648,
        4654
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1263": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4648,
        4654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1264": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1265": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4630,
        4642
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F8"
    },
    "1268": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4630,
        4640
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "1271": {
      "fn": "BEP20.transferFrom",
      "jump": "i",
      "offset": [
        4630,
        4642
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1272": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4630,
        4642
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1279": {
      "op": "SHL"
    },
    "1280": {
      "op": "SUB"
    },
    "1281": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "AND",
      "path": "3"
    },
    "1282": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1283": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1284": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1286": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1287": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "ADD",
      "path": "3"
    },
    "1288": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1289": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1290": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1291": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1292": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1294": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "ADD",
      "path": "3"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1297": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1298": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1299": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4643
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1300": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC94"
    },
    "1303": {
      "fn": "BEP20.transferFrom",
      "jump": "i",
      "offset": [
        4610,
        4655
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1304": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4610,
        4655
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1305": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4579,
        4587
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA72"
    },
    "1308": {
      "fn": "BEP20.transferFrom",
      "jump": "i",
      "offset": [
        4579,
        4656
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1309": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4579,
        4656
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1310": {
      "op": "POP"
    },
    "1311": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4673,
        4677
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x1"
    },
    "1313": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1314": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1315": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "POP",
      "path": "3"
    },
    "1316": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "POP",
      "path": "3"
    },
    "1317": {
      "fn": "BEP20.transferFrom",
      "offset": [
        4417,
        4684
      ],
      "op": "POP",
      "path": "3"
    },
    "1318": {
      "fn": "BEP20.transferFrom",
      "jump": "o",
      "offset": [
        4417,
        4684
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1319": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1320": {
      "fn": "BEP20.decimals",
      "offset": [
        2440,
        2449
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x5"
    },
    "1322": {
      "fn": "BEP20.decimals",
      "offset": [
        2440,
        2449
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1323": {
      "fn": "BEP20.decimals",
      "offset": [
        2440,
        2449
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1325": {
      "fn": "BEP20.decimals",
      "offset": [
        2440,
        2449
      ],
      "op": "AND",
      "path": "3"
    },
    "1326": {
      "fn": "BEP20.decimals",
      "offset": [
        2364,
        2456
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1327": {
      "fn": "BEP20.decimals",
      "jump": "o",
      "offset": [
        2364,
        2456
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1328": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5078,
        5285
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1329": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5158,
        5162
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1331": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5174,
        5257
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 9,
      "value": "0x4A5"
    },
    "1334": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5183,
        5195
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x53D"
    },
    "1337": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5183,
        5193
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "1340": {
      "fn": "BEP20.increaseAllowance",
      "jump": "i",
      "offset": [
        5183,
        5195
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1341": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5183,
        5195
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1342": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5197,
        5204
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1343": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5256
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x518"
    },
    "1346": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5245,
        5255
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1347": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1349": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1351": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5218,
        5230
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x54E"
    },
    "1354": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5218,
        5228
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "1357": {
      "fn": "BEP20.increaseAllowance",
      "jump": "i",
      "offset": [
        5218,
        5230
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1358": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5218,
        5230
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1365": {
      "op": "SHL"
    },
    "1366": {
      "op": "SUB"
    },
    "1367": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1368": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1369": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "AND",
      "path": "3"
    },
    "1370": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1371": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1372": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1374": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1375": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1376": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "ADD",
      "path": "3"
    },
    "1377": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1378": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1379": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1380": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1381": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1383": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1384": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1385": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "ADD",
      "path": "3"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1388": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1389": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1390": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5231
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1391": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5240
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1392": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5240
      ],
      "op": "DUP13",
      "path": "3"
    },
    "1393": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5240
      ],
      "op": "AND",
      "path": "3"
    },
    "1394": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1395": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1396": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5240
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1397": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1398": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1399": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5240
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1400": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5240
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1401": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1402": {
      "fn": "BEP20.increaseAllowance",
      "offset": [
        5206,
        5244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA11"
    },
    "1405": {
      "fn": "BEP20.increaseAllowance",
      "jump": "i",
      "offset": [
        5206,
        5256
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1406": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1407": {
      "fn": "BEP20.burn",
      "offset": [
        6992,
        6996
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1409": {
      "fn": "BEP20.burn",
      "offset": [
        7008,
        7035
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 10,
      "value": "0x591"
    },
    "1412": {
      "fn": "BEP20.burn",
      "offset": [
        7014,
        7026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x58B"
    },
    "1415": {
      "fn": "BEP20.burn",
      "offset": [
        7014,
        7024
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "1418": {
      "fn": "BEP20.burn",
      "jump": "i",
      "offset": [
        7014,
        7026
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1419": {
      "fn": "BEP20.burn",
      "offset": [
        7014,
        7026
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1420": {
      "fn": "BEP20.burn",
      "offset": [
        7028,
        7034
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1421": {
      "fn": "BEP20.burn",
      "offset": [
        7008,
        7013
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCF1"
    },
    "1424": {
      "fn": "BEP20.burn",
      "jump": "i",
      "offset": [
        7008,
        7035
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1425": {
      "fn": "BEP20.burn",
      "offset": [
        7008,
        7035
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1426": {
      "op": "POP"
    },
    "1427": {
      "fn": "BEP20.burn",
      "offset": [
        7052,
        7056
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 11,
      "value": "0x1"
    },
    "1429": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1430": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1431": {
      "fn": "BEP20.burn",
      "offset": [
        6946,
        7063
      ],
      "op": "POP",
      "path": "3"
    },
    "1432": {
      "fn": "BEP20.burn",
      "jump": "o",
      "offset": [
        6946,
        7063
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1433": {
      "fn": "BEP20.mintable",
      "offset": [
        2075,
        2157
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1434": {
      "fn": "BEP20.mintable",
      "offset": [
        2141,
        2150
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 12,
      "value": "0x5"
    },
    "1436": {
      "fn": "BEP20.mintable",
      "offset": [
        2141,
        2150
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1441": {
      "op": "SHL"
    },
    "1442": {
      "fn": "BEP20.mintable",
      "offset": [
        2141,
        2150
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1443": {
      "fn": "BEP20.mintable",
      "offset": [
        2141,
        2150
      ],
      "op": "DIV",
      "path": "3"
    },
    "1444": {
      "fn": "BEP20.mintable",
      "offset": [
        2141,
        2150
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1446": {
      "fn": "BEP20.mintable",
      "offset": [
        2141,
        2150
      ],
      "op": "AND",
      "path": "3"
    },
    "1447": {
      "fn": "BEP20.mintable",
      "offset": [
        2141,
        2150
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1448": {
      "fn": "BEP20.mintable",
      "jump": "o",
      "offset": [
        2075,
        2157
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1449": {
      "fn": "BEP20.balanceOf",
      "offset": [
        2976,
        3095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1456": {
      "op": "SHL"
    },
    "1457": {
      "op": "SUB"
    },
    "1458": {
      "fn": "BEP20.balanceOf",
      "offset": [
        3070,
        3088
      ],
      "op": "AND",
      "path": "3",
      "statement": 13
    },
    "1459": {
      "fn": "BEP20.balanceOf",
      "offset": [
        3044,
        3051
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1461": {
      "fn": "BEP20.balanceOf",
      "offset": [
        3070,
        3088
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1462": {
      "fn": "BEP20.balanceOf",
      "offset": [
        3070,
        3088
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1463": {
      "fn": "BEP20.balanceOf",
      "offset": [
        3070,
        3088
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1464": {
      "fn": "BEP20.balanceOf",
      "offset": [
        3070,
        3088
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1466": {
      "fn": "BEP20.balanceOf",
      "offset": [
        3070,
        3088
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1467": {
      "fn": "BEP20.balanceOf",
      "offset": [
        3070,
        3088
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1468": {
      "fn": "BEP20.balanceOf",
      "offset": [
        3070,
        3088
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1469": {
      "fn": "BEP20.balanceOf",
      "offset": [
        3070,
        3088
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1471": {
      "fn": "BEP20.balanceOf",
      "offset": [
        3070,
        3088
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1472": {
      "fn": "BEP20.balanceOf",
      "offset": [
        3070,
        3088
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1473": {
      "fn": "BEP20.balanceOf",
      "offset": [
        3070,
        3088
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1474": {
      "fn": "BEP20.balanceOf",
      "offset": [
        3070,
        3088
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1475": {
      "fn": "BEP20.balanceOf",
      "jump": "o",
      "offset": [
        2976,
        3095
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1476": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1483,
        1620
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1477": {
      "offset": [
        1080,
        1092
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5CC"
    },
    "1480": {
      "offset": [
        1080,
        1090
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "1483": {
      "jump": "i",
      "offset": [
        1080,
        1092
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1484": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1080,
        1092
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1485": {
      "offset": [
        1070,
        1076
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1487": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1070,
        1076
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1488": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1070,
        1076
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1491": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1070,
        1076
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1492": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1070,
        1076
      ],
      "op": "DIV",
      "path": "3"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1499": {
      "op": "SHL"
    },
    "1500": {
      "op": "SUB"
    },
    "1501": {
      "offset": [
        1070,
        1076
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1502": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1070,
        1076
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1503": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1070,
        1076
      ],
      "op": "AND",
      "path": "3"
    },
    "1504": {
      "offset": [
        1070,
        1092
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1505": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1070,
        1092
      ],
      "op": "AND",
      "path": "3"
    },
    "1506": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1070,
        1092
      ],
      "op": "EQ",
      "path": "3"
    },
    "1507": {
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x621"
    },
    "1510": {
      "offset": [
        1062,
        1129
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1511": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1513": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1514": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1515": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1521": {
      "op": "SHL"
    },
    "1522": {
      "offset": [
        1062,
        1129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1523": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1524": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1526": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1528": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1529": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "1530": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1531": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1532": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1533": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1535": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1536": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "1537": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1540": {
      "op": "DUP1"
    },
    "1541": {
      "op": "MLOAD"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1544": {
      "op": "PUSH2",
      "value": "0xF1B"
    },
    "1547": {
      "op": "DUP4"
    },
    "1548": {
      "op": "CODECOPY"
    },
    "1549": {
      "op": "DUP2"
    },
    "1550": {
      "op": "MLOAD"
    },
    "1551": {
      "op": "SWAP2"
    },
    "1552": {
      "op": "MSTORE"
    },
    "1553": {
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "1555": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1556": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "1557": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1558": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1559": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1560": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1561": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1562": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1563": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "SUB",
      "path": "3"
    },
    "1564": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "1566": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "1567": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1568": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1569": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1570": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1565,
        1571
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 14,
      "value": "0x5"
    },
    "1572": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1565,
        1571
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1573": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1544,
        1584
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1575": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1544,
        1584
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1576": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1581,
        1582
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1578": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1581,
        1582
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1579": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1565,
        1571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1582": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1565,
        1571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1583": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1565,
        1571
      ],
      "op": "DIV",
      "path": "3"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1590": {
      "op": "SHL"
    },
    "1591": {
      "op": "SUB"
    },
    "1592": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1565,
        1571
      ],
      "op": "AND",
      "path": "3"
    },
    "1593": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1565,
        1571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1594": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1544,
        1584
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1627": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1544,
        1584
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1628": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1581,
        1582
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1629": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1581,
        1582
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1630": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1544,
        1584
      ],
      "op": "LOG3",
      "path": "3"
    },
    "1631": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1594,
        1600
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 15,
      "value": "0x5"
    },
    "1633": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1594,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1634": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1594,
        1613
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1635": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1642": {
      "op": "SHL"
    },
    "1643": {
      "op": "SUB"
    },
    "1644": {
      "op": "NOT"
    },
    "1645": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1594,
        1613
      ],
      "op": "AND",
      "path": "3"
    },
    "1646": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1594,
        1613
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1647": {
      "fn": "BEP20.renounceOwnership",
      "offset": [
        1594,
        1613
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1648": {
      "fn": "BEP20.renounceOwnership",
      "jump": "o",
      "offset": [
        1483,
        1620
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1649": {
      "fn": "BEP20.getOwner",
      "offset": [
        2220,
        2302
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1650": {
      "fn": "BEP20.getOwner",
      "offset": [
        2289,
        2295
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 16,
      "value": "0x5"
    },
    "1652": {
      "fn": "BEP20.getOwner",
      "offset": [
        2289,
        2295
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1653": {
      "fn": "BEP20.getOwner",
      "offset": [
        2289,
        2295
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1656": {
      "fn": "BEP20.getOwner",
      "offset": [
        2289,
        2295
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1657": {
      "fn": "BEP20.getOwner",
      "offset": [
        2289,
        2295
      ],
      "op": "DIV",
      "path": "3"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1664": {
      "op": "SHL"
    },
    "1665": {
      "op": "SUB"
    },
    "1666": {
      "fn": "BEP20.getOwner",
      "offset": [
        2289,
        2295
      ],
      "op": "AND",
      "path": "3"
    },
    "1667": {
      "fn": "BEP20.getOwner",
      "offset": [
        2289,
        2295
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1668": {
      "fn": "BEP20.getOwner",
      "jump": "o",
      "offset": [
        2220,
        2302
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1669": {
      "fn": "BEP20.symbol",
      "offset": [
        2516,
        2612
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1670": {
      "fn": "BEP20.symbol",
      "offset": [
        2598,
        2605
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 17,
      "value": "0x4"
    },
    "1672": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1673": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1674": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1676": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1677": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1678": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1680": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1682": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1686": {
      "op": "NOT"
    },
    "1687": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1690": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1692": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1693": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "AND",
      "path": "3"
    },
    "1694": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1695": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "MUL",
      "path": "3"
    },
    "1696": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "ADD",
      "path": "3"
    },
    "1697": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1698": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1699": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "AND",
      "path": "3"
    },
    "1700": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1701": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1702": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1703": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DIV",
      "path": "3"
    },
    "1704": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1705": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1706": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "ADD",
      "path": "3"
    },
    "1707": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1708": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1709": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DIV",
      "path": "3"
    },
    "1710": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1711": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "MUL",
      "path": "3"
    },
    "1712": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1713": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "ADD",
      "path": "3"
    },
    "1714": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1715": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "ADD",
      "path": "3"
    },
    "1716": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1717": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1718": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1719": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1720": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1721": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1722": {
      "fn": "BEP20.symbol",
      "offset": [
        2566,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1724": {
      "fn": "BEP20.symbol",
      "offset": [
        2566,
        2579
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1725": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1726": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1727": {
      "fn": "BEP20.symbol",
      "offset": [
        2598,
        2605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1728": {
      "fn": "BEP20.symbol",
      "offset": [
        2598,
        2605
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1729": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1730": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "ADD",
      "path": "3"
    },
    "1731": {
      "fn": "BEP20.symbol",
      "offset": [
        2598,
        2605
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1732": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1733": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1734": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1735": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x487"
    },
    "1738": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1739": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1740": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1742": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "LT",
      "path": "3"
    },
    "1743": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45C"
    },
    "1746": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1747": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1750": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1751": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1752": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1753": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DIV",
      "path": "3"
    },
    "1754": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "MUL",
      "path": "3"
    },
    "1755": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1756": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1757": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1758": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1760": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "ADD",
      "path": "3"
    },
    "1761": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1762": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x487"
    },
    "1765": {
      "fn": "BEP20.symbol",
      "offset": [
        2591,
        2605
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1766": {
      "fn": "BEP20.mint",
      "offset": [
        6230,
        6415
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1767": {
      "fn": "BEP20.mint",
      "offset": [
        6286,
        6290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1769": {
      "offset": [
        1080,
        1092
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F0"
    },
    "1772": {
      "offset": [
        1080,
        1090
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "1775": {
      "jump": "i",
      "offset": [
        1080,
        1092
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1776": {
      "fn": "BEP20.mint",
      "offset": [
        1080,
        1092
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1777": {
      "offset": [
        1070,
        1076
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1779": {
      "fn": "BEP20.mint",
      "offset": [
        1070,
        1076
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1780": {
      "fn": "BEP20.mint",
      "offset": [
        1070,
        1076
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1783": {
      "fn": "BEP20.mint",
      "offset": [
        1070,
        1076
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1784": {
      "fn": "BEP20.mint",
      "offset": [
        1070,
        1076
      ],
      "op": "DIV",
      "path": "3"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1791": {
      "op": "SHL"
    },
    "1792": {
      "op": "SUB"
    },
    "1793": {
      "offset": [
        1070,
        1076
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1794": {
      "fn": "BEP20.mint",
      "offset": [
        1070,
        1076
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1795": {
      "fn": "BEP20.mint",
      "offset": [
        1070,
        1076
      ],
      "op": "AND",
      "path": "3"
    },
    "1796": {
      "offset": [
        1070,
        1092
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1797": {
      "fn": "BEP20.mint",
      "offset": [
        1070,
        1092
      ],
      "op": "AND",
      "path": "3"
    },
    "1798": {
      "fn": "BEP20.mint",
      "offset": [
        1070,
        1092
      ],
      "op": "EQ",
      "path": "3"
    },
    "1799": {
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x745"
    },
    "1802": {
      "offset": [
        1062,
        1129
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1803": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1805": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1806": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1807": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1813": {
      "op": "SHL"
    },
    "1814": {
      "offset": [
        1062,
        1129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1815": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1816": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1818": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1820": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1821": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "1822": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1823": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1824": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1825": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1827": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1828": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "1829": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1832": {
      "op": "DUP1"
    },
    "1833": {
      "op": "MLOAD"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1836": {
      "op": "PUSH2",
      "value": "0xF1B"
    },
    "1839": {
      "op": "DUP4"
    },
    "1840": {
      "op": "CODECOPY"
    },
    "1841": {
      "op": "DUP2"
    },
    "1842": {
      "op": "MLOAD"
    },
    "1843": {
      "op": "SWAP2"
    },
    "1844": {
      "op": "MSTORE"
    },
    "1845": {
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "1847": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1848": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "1849": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1850": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1851": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1852": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1853": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1854": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1855": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "SUB",
      "path": "3"
    },
    "1856": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "1858": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "1859": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1860": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1861": {
      "fn": "BEP20.mint",
      "offset": [
        1062,
        1129
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1862": {
      "fn": "BEP20.mint",
      "offset": [
        6310,
        6319
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 18,
      "value": "0x5"
    },
    "1864": {
      "fn": "BEP20.mint",
      "offset": [
        6310,
        6319
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1869": {
      "op": "SHL"
    },
    "1870": {
      "fn": "BEP20.mint",
      "offset": [
        6310,
        6319
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1871": {
      "fn": "BEP20.mint",
      "offset": [
        6310,
        6319
      ],
      "op": "DIV",
      "path": "3"
    },
    "1872": {
      "fn": "BEP20.mint",
      "offset": [
        6310,
        6319
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1874": {
      "branch": 49,
      "fn": "BEP20.mint",
      "offset": [
        6310,
        6319
      ],
      "op": "AND",
      "path": "3"
    },
    "1875": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A3"
    },
    "1878": {
      "branch": 49,
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1879": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1881": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1882": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1883": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1889": {
      "op": "SHL"
    },
    "1890": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1891": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1892": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1894": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1896": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1897": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "ADD",
      "path": "3"
    },
    "1898": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1899": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "1901": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1903": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1904": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "ADD",
      "path": "3"
    },
    "1905": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1906": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000"
    },
    "1939": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "1941": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1942": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "ADD",
      "path": "3"
    },
    "1943": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1944": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1945": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1946": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1947": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1948": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1949": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "SUB",
      "path": "3"
    },
    "1950": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "1952": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "ADD",
      "path": "3"
    },
    "1953": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1954": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1955": {
      "fn": "BEP20.mint",
      "offset": [
        6302,
        6350
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1956": {
      "fn": "BEP20.mint",
      "offset": [
        6360,
        6387
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 19,
      "value": "0x591"
    },
    "1959": {
      "fn": "BEP20.mint",
      "offset": [
        6366,
        6378
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7AE"
    },
    "1962": {
      "fn": "BEP20.mint",
      "offset": [
        6366,
        6376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "1965": {
      "fn": "BEP20.mint",
      "jump": "i",
      "offset": [
        6366,
        6378
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1966": {
      "fn": "BEP20.mint",
      "offset": [
        6366,
        6378
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1967": {
      "fn": "BEP20.mint",
      "offset": [
        6380,
        6386
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1968": {
      "fn": "BEP20.mint",
      "offset": [
        6360,
        6365
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC7"
    },
    "1971": {
      "fn": "BEP20.mint",
      "jump": "i",
      "offset": [
        6360,
        6387
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1972": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5771,
        5988
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1973": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5856,
        5860
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1975": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5872,
        5960
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 20,
      "value": "0x4A5"
    },
    "1978": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5881,
        5893
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7C1"
    },
    "1981": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5881,
        5891
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "1984": {
      "fn": "BEP20.decreaseAllowance",
      "jump": "i",
      "offset": [
        5881,
        5893
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1985": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5881,
        5893
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1986": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5895,
        5902
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1987": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x518"
    },
    "1990": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5943,
        5958
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1991": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5915
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1993": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1995": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5916,
        5928
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D2"
    },
    "1998": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5916,
        5926
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "2001": {
      "fn": "BEP20.decreaseAllowance",
      "jump": "i",
      "offset": [
        5916,
        5928
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2002": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5916,
        5928
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2009": {
      "op": "SHL"
    },
    "2010": {
      "op": "SUB"
    },
    "2011": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2012": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2013": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "AND",
      "path": "3"
    },
    "2014": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2015": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2016": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2018": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2019": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2020": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "ADD",
      "path": "3"
    },
    "2021": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2022": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2023": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2024": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2025": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2027": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2028": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2029": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "ADD",
      "path": "3"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2032": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2033": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2034": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5929
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2035": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5938
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2036": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5938
      ],
      "op": "DUP13",
      "path": "3"
    },
    "2037": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5938
      ],
      "op": "AND",
      "path": "3"
    },
    "2038": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5938
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2039": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5938
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2040": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5938
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2041": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5938
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2042": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5938
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2043": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5938
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2044": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5938
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2045": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5938
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2046": {
      "fn": "BEP20.decreaseAllowance",
      "offset": [
        5904,
        5942
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC94"
    },
    "2049": {
      "fn": "BEP20.decreaseAllowance",
      "jump": "i",
      "offset": [
        5904,
        5959
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2050": {
      "fn": "BEP20.transfer",
      "offset": [
        3297,
        3463
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2051": {
      "fn": "BEP20.transfer",
      "offset": [
        3377,
        3381
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2053": {
      "fn": "BEP20.transfer",
      "offset": [
        3393,
        3435
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 21,
      "value": "0x4A5"
    },
    "2056": {
      "fn": "BEP20.transfer",
      "offset": [
        3403,
        3415
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x80F"
    },
    "2059": {
      "fn": "BEP20.transfer",
      "offset": [
        3403,
        3413
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "2062": {
      "fn": "BEP20.transfer",
      "jump": "i",
      "offset": [
        3403,
        3415
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2063": {
      "fn": "BEP20.transfer",
      "offset": [
        3403,
        3415
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2064": {
      "fn": "BEP20.transfer",
      "offset": [
        3417,
        3426
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2065": {
      "fn": "BEP20.transfer",
      "offset": [
        3428,
        3434
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2066": {
      "fn": "BEP20.transfer",
      "offset": [
        3393,
        3402
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB5E"
    },
    "2069": {
      "fn": "BEP20.transfer",
      "jump": "i",
      "offset": [
        3393,
        3435
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2070": {
      "fn": "BEP20.mintTo",
      "offset": [
        6656,
        6859
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2071": {
      "fn": "BEP20.mintTo",
      "offset": [
        6733,
        6737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2073": {
      "offset": [
        1080,
        1092
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x820"
    },
    "2076": {
      "offset": [
        1080,
        1090
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "2079": {
      "jump": "i",
      "offset": [
        1080,
        1092
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2080": {
      "fn": "BEP20.mintTo",
      "offset": [
        1080,
        1092
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2081": {
      "offset": [
        1070,
        1076
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2083": {
      "fn": "BEP20.mintTo",
      "offset": [
        1070,
        1076
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2084": {
      "fn": "BEP20.mintTo",
      "offset": [
        1070,
        1076
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2087": {
      "fn": "BEP20.mintTo",
      "offset": [
        1070,
        1076
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2088": {
      "fn": "BEP20.mintTo",
      "offset": [
        1070,
        1076
      ],
      "op": "DIV",
      "path": "3"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2095": {
      "op": "SHL"
    },
    "2096": {
      "op": "SUB"
    },
    "2097": {
      "offset": [
        1070,
        1076
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2098": {
      "fn": "BEP20.mintTo",
      "offset": [
        1070,
        1076
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2099": {
      "fn": "BEP20.mintTo",
      "offset": [
        1070,
        1076
      ],
      "op": "AND",
      "path": "3"
    },
    "2100": {
      "offset": [
        1070,
        1092
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2101": {
      "fn": "BEP20.mintTo",
      "offset": [
        1070,
        1092
      ],
      "op": "AND",
      "path": "3"
    },
    "2102": {
      "fn": "BEP20.mintTo",
      "offset": [
        1070,
        1092
      ],
      "op": "EQ",
      "path": "3"
    },
    "2103": {
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x875"
    },
    "2106": {
      "offset": [
        1062,
        1129
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2107": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2109": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2110": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2111": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2117": {
      "op": "SHL"
    },
    "2118": {
      "offset": [
        1062,
        1129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2119": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2120": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2122": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2124": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2125": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "2126": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2127": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2128": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2129": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2131": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2132": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "2133": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2136": {
      "op": "DUP1"
    },
    "2137": {
      "op": "MLOAD"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2140": {
      "op": "PUSH2",
      "value": "0xF1B"
    },
    "2143": {
      "op": "DUP4"
    },
    "2144": {
      "op": "CODECOPY"
    },
    "2145": {
      "op": "DUP2"
    },
    "2146": {
      "op": "MLOAD"
    },
    "2147": {
      "op": "SWAP2"
    },
    "2148": {
      "op": "MSTORE"
    },
    "2149": {
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "2151": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2152": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "2153": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2154": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2155": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2156": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2157": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2158": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2159": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "SUB",
      "path": "3"
    },
    "2160": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2162": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "2163": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2164": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2165": {
      "fn": "BEP20.mintTo",
      "offset": [
        1062,
        1129
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2166": {
      "fn": "BEP20.mintTo",
      "offset": [
        6757,
        6766
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 22,
      "value": "0x5"
    },
    "2168": {
      "fn": "BEP20.mintTo",
      "offset": [
        6757,
        6766
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2173": {
      "op": "SHL"
    },
    "2174": {
      "fn": "BEP20.mintTo",
      "offset": [
        6757,
        6766
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2175": {
      "fn": "BEP20.mintTo",
      "offset": [
        6757,
        6766
      ],
      "op": "DIV",
      "path": "3"
    },
    "2176": {
      "fn": "BEP20.mintTo",
      "offset": [
        6757,
        6766
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2178": {
      "branch": 50,
      "fn": "BEP20.mintTo",
      "offset": [
        6757,
        6766
      ],
      "op": "AND",
      "path": "3"
    },
    "2179": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8D3"
    },
    "2182": {
      "branch": 50,
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2183": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2185": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2186": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2187": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2193": {
      "op": "SHL"
    },
    "2194": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2195": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2196": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2198": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2200": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2201": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "ADD",
      "path": "3"
    },
    "2202": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2203": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "2205": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2207": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2208": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "ADD",
      "path": "3"
    },
    "2209": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2210": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000"
    },
    "2243": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "2245": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2246": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "ADD",
      "path": "3"
    },
    "2247": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2248": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2249": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2250": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2251": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2252": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2253": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "SUB",
      "path": "3"
    },
    "2254": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2256": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "ADD",
      "path": "3"
    },
    "2257": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2258": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2259": {
      "fn": "BEP20.mintTo",
      "offset": [
        6749,
        6797
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2260": {
      "fn": "BEP20.mintTo",
      "offset": [
        6807,
        6831
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 23,
      "value": "0x4A5"
    },
    "2263": {
      "fn": "BEP20.mintTo",
      "offset": [
        6813,
        6822
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2264": {
      "fn": "BEP20.mintTo",
      "offset": [
        6824,
        6830
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2265": {
      "fn": "BEP20.mintTo",
      "offset": [
        6807,
        6812
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC7"
    },
    "2268": {
      "fn": "BEP20.mintTo",
      "jump": "i",
      "offset": [
        6807,
        6831
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2269": {
      "fn": "BEP20.allowance",
      "offset": [
        3520,
        3663
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2276": {
      "op": "SHL"
    },
    "2277": {
      "op": "SUB"
    },
    "2278": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3647
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 24
    },
    "2279": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2280": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3647
      ],
      "op": "AND",
      "path": "3"
    },
    "2281": {
      "fn": "BEP20.allowance",
      "offset": [
        3603,
        3610
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2283": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2284": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2285": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2286": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2288": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2290": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2291": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2292": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2293": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2295": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2296": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3647
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2297": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3647
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2298": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3656
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2299": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3656
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2300": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3656
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2301": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3656
      ],
      "op": "AND",
      "path": "3"
    },
    "2302": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3656
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2303": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3656
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2304": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3656
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2305": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3656
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2306": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3656
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2307": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3656
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2308": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3656
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2309": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3656
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2310": {
      "fn": "BEP20.allowance",
      "offset": [
        3629,
        3656
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2311": {
      "fn": "BEP20.allowance",
      "jump": "o",
      "offset": [
        3520,
        3663
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2312": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1769,
        2001
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2313": {
      "offset": [
        1080,
        1092
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x910"
    },
    "2316": {
      "offset": [
        1080,
        1090
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "2319": {
      "jump": "i",
      "offset": [
        1080,
        1092
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2320": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1080,
        1092
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2321": {
      "offset": [
        1070,
        1076
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2323": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1070,
        1076
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2324": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1070,
        1076
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2327": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1070,
        1076
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2328": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1070,
        1076
      ],
      "op": "DIV",
      "path": "3"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2335": {
      "op": "SHL"
    },
    "2336": {
      "op": "SUB"
    },
    "2337": {
      "offset": [
        1070,
        1076
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2338": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1070,
        1076
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2339": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1070,
        1076
      ],
      "op": "AND",
      "path": "3"
    },
    "2340": {
      "offset": [
        1070,
        1092
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2341": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1070,
        1092
      ],
      "op": "AND",
      "path": "3"
    },
    "2342": {
      "branch": 51,
      "fn": "BEP20.transferOwnership",
      "offset": [
        1070,
        1092
      ],
      "op": "EQ",
      "path": "3"
    },
    "2343": {
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x965"
    },
    "2346": {
      "branch": 51,
      "offset": [
        1062,
        1129
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2347": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2349": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2350": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2351": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2357": {
      "op": "SHL"
    },
    "2358": {
      "offset": [
        1062,
        1129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2359": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2360": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2362": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2364": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2365": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "2366": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2367": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2368": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2369": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2371": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2372": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "2373": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2376": {
      "op": "DUP1"
    },
    "2377": {
      "op": "MLOAD"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2380": {
      "op": "PUSH2",
      "value": "0xF1B"
    },
    "2383": {
      "op": "DUP4"
    },
    "2384": {
      "op": "CODECOPY"
    },
    "2385": {
      "op": "DUP2"
    },
    "2386": {
      "op": "MLOAD"
    },
    "2387": {
      "op": "SWAP2"
    },
    "2388": {
      "op": "MSTORE"
    },
    "2389": {
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "2391": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2392": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "2393": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2394": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2395": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2396": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2397": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2398": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2399": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "SUB",
      "path": "3"
    },
    "2400": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2402": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "ADD",
      "path": "3"
    },
    "2403": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2404": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2405": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1062,
        1129
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2412": {
      "op": "SHL"
    },
    "2413": {
      "op": "SUB"
    },
    "2414": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1849,
        1871
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 25
    },
    "2415": {
      "branch": 52,
      "fn": "BEP20.transferOwnership",
      "offset": [
        1849,
        1871
      ],
      "op": "AND",
      "path": "3"
    },
    "2416": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9AA"
    },
    "2419": {
      "branch": 52,
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2420": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2422": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2423": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2429": {
      "op": "SHL"
    },
    "2430": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2431": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2432": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2434": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "ADD",
      "path": "3"
    },
    "2435": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2436": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2437": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2439": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "ADD",
      "path": "3"
    },
    "2440": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2441": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2442": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "SUB",
      "path": "3"
    },
    "2443": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2444": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2445": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "2447": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2448": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2449": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2451": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "ADD",
      "path": "3"
    },
    "2452": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2453": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEF5"
    },
    "2456": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "2458": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2459": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "2460": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2462": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "ADD",
      "path": "3"
    },
    "2463": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2464": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "POP",
      "path": "3"
    },
    "2465": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "POP",
      "path": "3"
    },
    "2466": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2468": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2469": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2470": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2471": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "SUB",
      "path": "3"
    },
    "2472": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2473": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2474": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1841,
        1914
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2475": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1950,
        1956
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 26,
      "value": "0x5"
    },
    "2477": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1950,
        1956
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2478": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1929,
        1967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2480": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1929,
        1967
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2487": {
      "op": "SHL"
    },
    "2488": {
      "op": "SUB"
    },
    "2489": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1929,
        1967
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2490": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1929,
        1967
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2491": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1929,
        1967
      ],
      "op": "AND",
      "path": "3"
    },
    "2492": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1929,
        1967
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2493": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1950,
        1956
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2496": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1950,
        1956
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2497": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1950,
        1956
      ],
      "op": "DIV",
      "path": "3"
    },
    "2498": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1950,
        1956
      ],
      "op": "AND",
      "path": "3"
    },
    "2499": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1950,
        1956
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2500": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1929,
        1967
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2533": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1929,
        1967
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2534": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1929,
        1967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2536": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1929,
        1967
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2537": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1929,
        1967
      ],
      "op": "LOG3",
      "path": "3"
    },
    "2538": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1983
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 27,
      "value": "0x5"
    },
    "2540": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2541": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2548": {
      "op": "SHL"
    },
    "2549": {
      "op": "SUB"
    },
    "2550": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2551": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2552": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "AND",
      "path": "3"
    },
    "2553": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2556": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "MUL",
      "path": "3"
    },
    "2557": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2564": {
      "op": "SHL"
    },
    "2565": {
      "op": "SUB"
    },
    "2566": {
      "op": "NOT"
    },
    "2567": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2568": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2569": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "AND",
      "path": "3"
    },
    "2570": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2571": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2572": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2573": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "OR",
      "path": "3"
    },
    "2574": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2575": {
      "fn": "BEP20.transferOwnership",
      "offset": [
        1977,
        1994
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2576": {
      "fn": "BEP20.transferOwnership",
      "jump": "o",
      "offset": [
        1769,
        2001
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2577": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2578": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2580": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2581": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2582": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "1"
    },
    "2583": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 28
    },
    "2584": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2585": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "1"
    },
    "2586": {
      "branch": 59,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2587": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA6B"
    },
    "2590": {
      "branch": 59,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2591": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2593": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2594": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2595": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2601": {
      "op": "SHL"
    },
    "2602": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2603": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2604": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2606": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2608": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2609": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "2610": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2611": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "2613": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2615": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2616": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "2617": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2618": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "2651": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2653": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2654": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "2655": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2656": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2657": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2658": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2659": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2660": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2661": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SUB",
      "path": "1"
    },
    "2662": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2664": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "2665": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2666": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2667": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2668": {
      "fn": "SafeMath.add",
      "offset": [
        2857,
        2858
      ],
      "op": "SWAP4",
      "path": "1",
      "statement": 29
    },
    "2669": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2670": {
      "op": "POP"
    },
    "2671": {
      "op": "POP"
    },
    "2672": {
      "op": "POP"
    },
    "2673": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2674": {
      "fn": "BEP20._approve",
      "offset": [
        9579,
        9911
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2681": {
      "op": "SHL"
    },
    "2682": {
      "op": "SUB"
    },
    "2683": {
      "fn": "BEP20._approve",
      "offset": [
        9672,
        9691
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 30
    },
    "2684": {
      "branch": 53,
      "fn": "BEP20._approve",
      "offset": [
        9672,
        9691
      ],
      "op": "AND",
      "path": "3"
    },
    "2685": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAB7"
    },
    "2688": {
      "branch": 53,
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2689": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2691": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2692": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2698": {
      "op": "SHL"
    },
    "2699": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2700": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2701": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2703": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "ADD",
      "path": "3"
    },
    "2704": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2705": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2706": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2708": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "ADD",
      "path": "3"
    },
    "2709": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2710": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2711": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "SUB",
      "path": "3"
    },
    "2712": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2713": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2714": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2716": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2717": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2718": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2720": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "ADD",
      "path": "3"
    },
    "2721": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2722": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xED1"
    },
    "2725": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2727": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2728": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "2729": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2731": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "ADD",
      "path": "3"
    },
    "2732": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2733": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "POP",
      "path": "3"
    },
    "2734": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "POP",
      "path": "3"
    },
    "2735": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2737": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2738": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2739": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2740": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "SUB",
      "path": "3"
    },
    "2741": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2742": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2743": {
      "fn": "BEP20._approve",
      "offset": [
        9664,
        9732
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2750": {
      "op": "SHL"
    },
    "2751": {
      "op": "SUB"
    },
    "2752": {
      "fn": "BEP20._approve",
      "offset": [
        9750,
        9771
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 31
    },
    "2753": {
      "branch": 54,
      "fn": "BEP20._approve",
      "offset": [
        9750,
        9771
      ],
      "op": "AND",
      "path": "3"
    },
    "2754": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFC"
    },
    "2757": {
      "branch": 54,
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2758": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2760": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2761": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2767": {
      "op": "SHL"
    },
    "2768": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2769": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2770": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2772": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "ADD",
      "path": "3"
    },
    "2773": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2774": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2775": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2777": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "ADD",
      "path": "3"
    },
    "2778": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2779": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2780": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "SUB",
      "path": "3"
    },
    "2781": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2782": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2783": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "2785": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2786": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2787": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2789": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "ADD",
      "path": "3"
    },
    "2790": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2791": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF7F"
    },
    "2794": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "2796": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2797": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "2798": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2800": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "ADD",
      "path": "3"
    },
    "2801": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2802": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "POP",
      "path": "3"
    },
    "2803": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "POP",
      "path": "3"
    },
    "2804": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2806": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2807": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2808": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2809": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "SUB",
      "path": "3"
    },
    "2810": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2811": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2812": {
      "fn": "BEP20._approve",
      "offset": [
        9742,
        9810
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "op": "SUB"
    },
    "2821": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 32
    },
    "2822": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2823": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "AND",
      "path": "3"
    },
    "2824": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2826": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2827": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2828": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2829": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9832
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2831": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2833": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2834": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2835": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2836": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2838": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2839": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2840": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9839
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2841": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9848
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2842": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9848
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2843": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9848
      ],
      "op": "AND",
      "path": "3"
    },
    "2844": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9848
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2845": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9848
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2846": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9848
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2847": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9848
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2848": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9848
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2849": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9848
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2850": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9848
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2851": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9848
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2852": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9848
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2853": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9848
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2854": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9857
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2855": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9857
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2856": {
      "fn": "BEP20._approve",
      "offset": [
        9821,
        9857
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2857": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 33
    },
    "2858": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2859": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2860": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2861": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2862": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2863": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2864": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2897": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2898": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2899": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2900": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "SUB",
      "path": "3"
    },
    "2901": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2902": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2903": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "ADD",
      "path": "3"
    },
    "2904": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2905": {
      "fn": "BEP20._approve",
      "offset": [
        9872,
        9904
      ],
      "op": "LOG3",
      "path": "3"
    },
    "2906": {
      "fn": "BEP20._approve",
      "offset": [
        9579,
        9911
      ],
      "op": "POP",
      "path": "3"
    },
    "2907": {
      "fn": "BEP20._approve",
      "offset": [
        9579,
        9911
      ],
      "op": "POP",
      "path": "3"
    },
    "2908": {
      "fn": "BEP20._approve",
      "offset": [
        9579,
        9911
      ],
      "op": "POP",
      "path": "3"
    },
    "2909": {
      "fn": "BEP20._approve",
      "jump": "o",
      "offset": [
        9579,
        9911
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2910": {
      "fn": "BEP20._transfer",
      "offset": [
        7537,
        7959
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2917": {
      "op": "SHL"
    },
    "2918": {
      "op": "SUB"
    },
    "2919": {
      "fn": "BEP20._transfer",
      "offset": [
        7634,
        7654
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 34
    },
    "2920": {
      "branch": 55,
      "fn": "BEP20._transfer",
      "offset": [
        7634,
        7654
      ],
      "op": "AND",
      "path": "3"
    },
    "2921": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA3"
    },
    "2924": {
      "branch": 55,
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2925": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2927": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2928": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2934": {
      "op": "SHL"
    },
    "2935": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2936": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2937": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2939": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "ADD",
      "path": "3"
    },
    "2940": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2941": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2942": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2944": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "ADD",
      "path": "3"
    },
    "2945": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2946": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2947": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "SUB",
      "path": "3"
    },
    "2948": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2949": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2950": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "2952": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2953": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2954": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2956": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "ADD",
      "path": "3"
    },
    "2957": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2958": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEAC"
    },
    "2961": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "2963": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2964": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "2965": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2967": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "ADD",
      "path": "3"
    },
    "2968": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2969": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "POP",
      "path": "3"
    },
    "2970": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "POP",
      "path": "3"
    },
    "2971": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2973": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2974": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2975": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2976": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "SUB",
      "path": "3"
    },
    "2977": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2978": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2979": {
      "fn": "BEP20._transfer",
      "offset": [
        7626,
        7696
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2986": {
      "op": "SHL"
    },
    "2987": {
      "op": "SUB"
    },
    "2988": {
      "fn": "BEP20._transfer",
      "offset": [
        7714,
        7737
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 35
    },
    "2989": {
      "branch": 56,
      "fn": "BEP20._transfer",
      "offset": [
        7714,
        7737
      ],
      "op": "AND",
      "path": "3"
    },
    "2990": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBE8"
    },
    "2993": {
      "branch": 56,
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2994": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2996": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2997": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3003": {
      "op": "SHL"
    },
    "3004": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3005": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3006": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3008": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "ADD",
      "path": "3"
    },
    "3009": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3010": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3011": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3013": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "ADD",
      "path": "3"
    },
    "3014": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3015": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3016": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "SUB",
      "path": "3"
    },
    "3017": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3018": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3019": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x23"
    },
    "3021": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3022": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3023": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3025": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "ADD",
      "path": "3"
    },
    "3026": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3027": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3B"
    },
    "3030": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x23"
    },
    "3032": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3033": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "3034": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3036": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "ADD",
      "path": "3"
    },
    "3037": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3038": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "POP",
      "path": "3"
    },
    "3039": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "POP",
      "path": "3"
    },
    "3040": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3042": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3043": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3044": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3045": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "SUB",
      "path": "3"
    },
    "3046": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3047": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3048": {
      "fn": "BEP20._transfer",
      "offset": [
        7706,
        7777
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3055": {
      "op": "SHL"
    },
    "3056": {
      "op": "SUB"
    },
    "3057": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7825
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 36
    },
    "3058": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7825
      ],
      "op": "AND",
      "path": "3"
    },
    "3059": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7817
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3061": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7825
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3062": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7825
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3063": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7825
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3064": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3066": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7825
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3067": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7825
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3068": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7825
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3069": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3071": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7825
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3072": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7825
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3073": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7825
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3074": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7837
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC0B"
    },
    "3077": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7837
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3078": {
      "fn": "BEP20._transfer",
      "offset": [
        7830,
        7836
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3079": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7829
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC94"
    },
    "3082": {
      "fn": "BEP20._transfer",
      "jump": "i",
      "offset": [
        7808,
        7837
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3083": {
      "fn": "BEP20._transfer",
      "offset": [
        7808,
        7837
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3090": {
      "op": "SHL"
    },
    "3091": {
      "op": "SUB"
    },
    "3092": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3093": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7805
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3094": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7805
      ],
      "op": "AND",
      "path": "3"
    },
    "3095": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7797
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3097": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3098": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7805
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3099": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7805
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3100": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3102": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7805
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3103": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7805
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3104": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7805
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3105": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3107": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7805
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3108": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7805
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3109": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7805
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3110": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7837
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3111": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7837
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3112": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7837
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3113": {
      "fn": "BEP20._transfer",
      "offset": [
        7788,
        7837
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3114": {
      "fn": "BEP20._transfer",
      "offset": [
        7870,
        7890
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 37
    },
    "3115": {
      "fn": "BEP20._transfer",
      "offset": [
        7870,
        7890
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3116": {
      "fn": "BEP20._transfer",
      "offset": [
        7870,
        7890
      ],
      "op": "AND",
      "path": "3"
    },
    "3117": {
      "fn": "BEP20._transfer",
      "offset": [
        7870,
        7890
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3118": {
      "fn": "BEP20._transfer",
      "offset": [
        7870,
        7890
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3119": {
      "fn": "BEP20._transfer",
      "offset": [
        7870,
        7890
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3120": {
      "fn": "BEP20._transfer",
      "offset": [
        7870,
        7890
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3121": {
      "fn": "BEP20._transfer",
      "offset": [
        7870,
        7902
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC3A"
    },
    "3124": {
      "fn": "BEP20._transfer",
      "offset": [
        7870,
        7902
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3125": {
      "fn": "BEP20._transfer",
      "offset": [
        7895,
        7901
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3126": {
      "fn": "BEP20._transfer",
      "offset": [
        7870,
        7894
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA11"
    },
    "3129": {
      "fn": "BEP20._transfer",
      "jump": "i",
      "offset": [
        7870,
        7902
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3130": {
      "fn": "BEP20._transfer",
      "offset": [
        7870,
        7902
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3137": {
      "op": "SHL"
    },
    "3138": {
      "op": "SUB"
    },
    "3139": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3140": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3141": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "AND",
      "path": "3"
    },
    "3142": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7856
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3144": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3145": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3146": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3147": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3149": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3150": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3151": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3152": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3154": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3155": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3156": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3157": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3158": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7902
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3159": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7902
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3160": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7902
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3161": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7902
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3162": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 38
    },
    "3163": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3164": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3165": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3166": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3167": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3168": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3169": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3170": {
      "fn": "BEP20._transfer",
      "offset": [
        7847,
        7867
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3171": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3172": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3173": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "AND",
      "path": "3"
    },
    "3174": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3175": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3208": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3209": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3210": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3211": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3212": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "SUB",
      "path": "3"
    },
    "3213": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "ADD",
      "path": "3"
    },
    "3214": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3215": {
      "fn": "BEP20._transfer",
      "offset": [
        7917,
        7952
      ],
      "op": "LOG3",
      "path": "3"
    },
    "3216": {
      "fn": "BEP20._transfer",
      "offset": [
        7537,
        7959
      ],
      "op": "POP",
      "path": "3"
    },
    "3217": {
      "fn": "BEP20._transfer",
      "offset": [
        7537,
        7959
      ],
      "op": "POP",
      "path": "3"
    },
    "3218": {
      "fn": "BEP20._transfer",
      "offset": [
        7537,
        7959
      ],
      "op": "POP",
      "path": "3"
    },
    "3219": {
      "fn": "BEP20._transfer",
      "jump": "o",
      "offset": [
        7537,
        7959
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3220": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3221": {
      "fn": "SafeMath.sub",
      "offset": [
        3194,
        3201
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3223": {
      "fn": "SafeMath.sub",
      "offset": [
        3226,
        3227
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 39
    },
    "3224": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3222
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3225": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "GT",
      "path": "1"
    },
    "3226": {
      "branch": 60,
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3227": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCEB"
    },
    "3230": {
      "branch": 60,
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3231": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3233": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3234": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3241": {
      "op": "SHL"
    },
    "3242": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3243": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3244": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3246": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3248": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3249": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "1"
    },
    "3250": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3251": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "3253": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3255": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3256": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "1"
    },
    "3257": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3258": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "3291": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "3293": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3294": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "1"
    },
    "3295": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3296": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3297": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3298": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3299": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3300": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3301": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SUB",
      "path": "1"
    },
    "3302": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "3304": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "1"
    },
    "3305": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3306": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3307": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3308": {
      "op": "POP"
    },
    "3309": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 40
    },
    "3310": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SUB",
      "path": "1"
    },
    "3311": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3312": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3313": {
      "fn": "BEP20._burn",
      "offset": [
        8850,
        9154
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3320": {
      "op": "SHL"
    },
    "3321": {
      "op": "SUB"
    },
    "3322": {
      "fn": "BEP20._burn",
      "offset": [
        8925,
        8946
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 41
    },
    "3323": {
      "branch": 57,
      "fn": "BEP20._burn",
      "offset": [
        8925,
        8946
      ],
      "op": "AND",
      "path": "3"
    },
    "3324": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD36"
    },
    "3327": {
      "branch": 57,
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3328": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3330": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3331": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3337": {
      "op": "SHL"
    },
    "3338": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3339": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3340": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3342": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "ADD",
      "path": "3"
    },
    "3343": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3344": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3345": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3347": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "ADD",
      "path": "3"
    },
    "3348": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3349": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3350": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "SUB",
      "path": "3"
    },
    "3351": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3352": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3353": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "3355": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3356": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3357": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3359": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "ADD",
      "path": "3"
    },
    "3360": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3361": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF5E"
    },
    "3364": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "3366": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3367": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "3368": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3370": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "ADD",
      "path": "3"
    },
    "3371": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3372": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "POP",
      "path": "3"
    },
    "3373": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "POP",
      "path": "3"
    },
    "3374": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3376": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3377": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3378": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3379": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "SUB",
      "path": "3"
    },
    "3380": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3381": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3382": {
      "fn": "BEP20._burn",
      "offset": [
        8917,
        8984
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3389": {
      "op": "SHL"
    },
    "3390": {
      "op": "SUB"
    },
    "3391": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9034
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 42
    },
    "3392": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9034
      ],
      "op": "AND",
      "path": "3"
    },
    "3393": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9025
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3395": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9034
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3396": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9034
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3397": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9034
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3398": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9034
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3400": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9034
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3401": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9034
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3402": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9034
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3403": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9034
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3405": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9034
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3406": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9034
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3407": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9034
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3408": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD59"
    },
    "3411": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9046
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3412": {
      "fn": "BEP20._burn",
      "offset": [
        9039,
        9045
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3413": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9038
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC94"
    },
    "3416": {
      "fn": "BEP20._burn",
      "jump": "i",
      "offset": [
        9016,
        9046
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3417": {
      "fn": "BEP20._burn",
      "offset": [
        9016,
        9046
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3424": {
      "op": "SHL"
    },
    "3425": {
      "op": "SUB"
    },
    "3426": {
      "fn": "BEP20._burn",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3427": {
      "fn": "BEP20._burn",
      "offset": [
        8995,
        9013
      ],
      "op": "AND",
      "path": "3"
    },
    "3428": {
      "fn": "BEP20._burn",
      "offset": [
        8995,
        9004
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3430": {
      "fn": "BEP20._burn",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3431": {
      "fn": "BEP20._burn",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3432": {
      "fn": "BEP20._burn",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3433": {
      "fn": "BEP20._burn",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3435": {
      "fn": "BEP20._burn",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3436": {
      "fn": "BEP20._burn",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3437": {
      "fn": "BEP20._burn",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3438": {
      "fn": "BEP20._burn",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3440": {
      "fn": "BEP20._burn",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3441": {
      "fn": "BEP20._burn",
      "offset": [
        8995,
        9013
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3442": {
      "fn": "BEP20._burn",
      "offset": [
        8995,
        9046
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3443": {
      "fn": "BEP20._burn",
      "offset": [
        9071,
        9083
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 43,
      "value": "0x2"
    },
    "3445": {
      "fn": "BEP20._burn",
      "offset": [
        9071,
        9083
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3446": {
      "fn": "BEP20._burn",
      "offset": [
        9071,
        9095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD7F"
    },
    "3449": {
      "fn": "BEP20._burn",
      "offset": [
        9071,
        9095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3450": {
      "fn": "BEP20._burn",
      "offset": [
        9088,
        9094
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3451": {
      "fn": "BEP20._burn",
      "offset": [
        9071,
        9087
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC94"
    },
    "3454": {
      "fn": "BEP20._burn",
      "jump": "i",
      "offset": [
        9071,
        9095
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3455": {
      "fn": "BEP20._burn",
      "offset": [
        9071,
        9095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3456": {
      "fn": "BEP20._burn",
      "offset": [
        9056,
        9068
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3458": {
      "fn": "BEP20._burn",
      "offset": [
        9056,
        9095
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3459": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 44,
      "value": "0x40"
    },
    "3461": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3462": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3463": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3464": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3465": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3466": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3467": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3468": {
      "fn": "BEP20._burn",
      "offset": [
        9136,
        9137
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3470": {
      "fn": "BEP20._burn",
      "offset": [
        9136,
        9137
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3477": {
      "op": "SHL"
    },
    "3478": {
      "op": "SUB"
    },
    "3479": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3480": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "AND",
      "path": "3"
    },
    "3481": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3482": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3515": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3516": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3517": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3518": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "SUB",
      "path": "3"
    },
    "3519": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3521": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "ADD",
      "path": "3"
    },
    "3522": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3523": {
      "fn": "BEP20._burn",
      "offset": [
        9110,
        9147
      ],
      "op": "LOG3",
      "path": "3"
    },
    "3524": {
      "fn": "BEP20._burn",
      "offset": [
        8850,
        9154
      ],
      "op": "POP",
      "path": "3"
    },
    "3525": {
      "fn": "BEP20._burn",
      "offset": [
        8850,
        9154
      ],
      "op": "POP",
      "path": "3"
    },
    "3526": {
      "fn": "BEP20._burn",
      "jump": "o",
      "offset": [
        8850,
        9154
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3527": {
      "fn": "BEP20._mint",
      "offset": [
        8229,
        8531
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3534": {
      "op": "SHL"
    },
    "3535": {
      "op": "SUB"
    },
    "3536": {
      "fn": "BEP20._mint",
      "offset": [
        8304,
        8325
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 45
    },
    "3537": {
      "branch": 58,
      "fn": "BEP20._mint",
      "offset": [
        8304,
        8325
      ],
      "op": "AND",
      "path": "3"
    },
    "3538": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE22"
    },
    "3541": {
      "branch": 58,
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3542": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3544": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3545": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3546": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3552": {
      "op": "SHL"
    },
    "3553": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3554": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3555": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3557": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3559": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3560": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "ADD",
      "path": "3"
    },
    "3561": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3562": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3564": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "3566": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3567": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "ADD",
      "path": "3"
    },
    "3568": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3569": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x42455032303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "3602": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "3604": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3605": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "ADD",
      "path": "3"
    },
    "3606": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3607": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3608": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3609": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3610": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3611": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3612": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "SUB",
      "path": "3"
    },
    "3613": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "3615": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "ADD",
      "path": "3"
    },
    "3616": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3617": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3618": {
      "fn": "BEP20._mint",
      "offset": [
        8296,
        8361
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3619": {
      "fn": "BEP20._mint",
      "offset": [
        8387,
        8399
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 46,
      "value": "0x2"
    },
    "3621": {
      "fn": "BEP20._mint",
      "offset": [
        8387,
        8399
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3622": {
      "fn": "BEP20._mint",
      "offset": [
        8387,
        8411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2F"
    },
    "3625": {
      "fn": "BEP20._mint",
      "offset": [
        8387,
        8411
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3626": {
      "fn": "BEP20._mint",
      "offset": [
        8404,
        8410
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3627": {
      "fn": "BEP20._mint",
      "offset": [
        8387,
        8403
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA11"
    },
    "3630": {
      "fn": "BEP20._mint",
      "jump": "i",
      "offset": [
        8387,
        8411
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3631": {
      "fn": "BEP20._mint",
      "offset": [
        8387,
        8411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3632": {
      "fn": "BEP20._mint",
      "offset": [
        8372,
        8384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3634": {
      "fn": "BEP20._mint",
      "offset": [
        8372,
        8411
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3641": {
      "op": "SHL"
    },
    "3642": {
      "op": "SUB"
    },
    "3643": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8460
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 47
    },
    "3644": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8460
      ],
      "op": "AND",
      "path": "3"
    },
    "3645": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8451
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3647": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8460
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3648": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8460
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3649": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8460
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3650": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8460
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3652": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8460
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3653": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8460
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3654": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8460
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3655": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8460
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3657": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8460
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3658": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8460
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3659": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8460
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3660": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE55"
    },
    "3663": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3664": {
      "fn": "BEP20._mint",
      "offset": [
        8465,
        8471
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3665": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8464
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA11"
    },
    "3668": {
      "fn": "BEP20._mint",
      "jump": "i",
      "offset": [
        8442,
        8472
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3669": {
      "fn": "BEP20._mint",
      "offset": [
        8442,
        8472
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3676": {
      "op": "SHL"
    },
    "3677": {
      "op": "SUB"
    },
    "3678": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3679": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "AND",
      "path": "3"
    },
    "3680": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8430
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3682": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3683": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3684": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3685": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3687": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3688": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3689": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3690": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3692": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3693": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3694": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3695": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8472
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3696": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3697": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8472
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3698": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8472
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3699": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 48
    },
    "3700": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3701": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3702": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3703": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3704": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3705": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3706": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3707": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8439
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3708": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8430
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3709": {
      "fn": "BEP20._mint",
      "offset": [
        8421,
        8430
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3710": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3743": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3744": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3745": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3746": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "SUB",
      "path": "3"
    },
    "3747": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3748": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3749": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "ADD",
      "path": "3"
    },
    "3750": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3751": {
      "fn": "BEP20._mint",
      "offset": [
        8487,
        8524
      ],
      "op": "LOG3",
      "path": "3"
    },
    "3752": {
      "fn": "BEP20._mint",
      "offset": [
        8229,
        8531
      ],
      "op": "POP",
      "path": "3"
    },
    "3753": {
      "fn": "BEP20._mint",
      "offset": [
        8229,
        8531
      ],
      "op": "POP",
      "path": "3"
    },
    "3754": {
      "fn": "BEP20._mint",
      "jump": "o",
      "offset": [
        8229,
        8531
      ],
      "op": "JUMP",
      "path": "3"
    }
  },
  "sha1": "bbae8d4bf7b200f5104ca3229ed9dd093e76be07",
  "source": "pragma solidity ^0.7.0;\n\nimport \"../interfaces/IBEP20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\n\ncontract BEP20 is IBEP20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n    mapping (address => mapping (address => uint256)) private _allowances;\n    uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    address private _owner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    bool private _mintable;\n\n    constructor(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable) public {\n        _owner = msg.sender;\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n        _mintable = mintable;\n        _mint(msg.sender, amount);\n    }\n\n    function _msgSender() public returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n    * @dev Leaves the contract without owner. It will not be possible to call\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\n    *\n    * NOTE: Renouncing ownership will leave the contract without an owner,\n    * thereby removing any functionality that is only available to the owner.\n    */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n\n    /**\n     * @dev Returns if the token is mintable or not\n     */\n    function mintable() external view returns (bool) {\n        return _mintable;\n    }\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external override view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external override view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n    * @dev Returns the token name.\n    */\n    function name() external override view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {BEP20-totalSupply}.\n     */\n    function totalSupply() external override view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {BEP20-balanceOf}.\n     */\n    function balanceOf(address account) external override view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {BEP20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-allowance}.\n     */\n    function allowance(address owner, address spender) external override view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {BEP20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) external override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {BEP20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue));\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n     * the total supply.\n     *\n     * Requirements\n     *\n     * - `msg.sender` must be the token owner\n     * - `_mintable` must be true\n     */\n    function mint(uint256 amount) public onlyOwner returns (bool) {\n        require(_mintable, \"this token is not mintable\");\n        _mint(_msgSender(), amount);\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `recipient`, increasing\n     * the total supply.\n     *\n     * Requirements\n     *\n     * - `msg.sender` must be the token owner\n     * - `_mintable` must be true\n     */\n    function mintTo(uint256 amount, address recipient) public onlyOwner returns (bool) {\n        require(_mintable, \"this token is not mintable\");\n        _mint(recipient, amount);\n        return true;\n    }\n\n\n    /**\n    * @dev Burn `amount` tokens and decreasing the total supply.\n    */\n    function burn(uint256 amount) public returns (bool) {\n        _burn(_msgSender(), amount);\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(amount);\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"BEP20: approve from the zero address\");\n        require(spender != address(0), \"BEP20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount));\n    }\n}",
  "sourceMap": "113:10167:3:-:0;;;569:287;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;569:287:3;;;;;;;;;;-1:-1:-1;569:287:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;569:287:3;;;;;;;;;;-1:-1:-1;569:287:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;569:287:3;;;;;;;;;;;;;;;;;;687:6;:19;;-1:-1:-1;;;;;;687:19:3;696:10;687:19;;;;;716:12;;569:287;;-1:-1:-1;569:287:3;;-1:-1:-1;716:12:3;;:5;;:12;;;;:::i;:::-;-1:-1:-1;738:16:3;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;764:9:3;:20;;-1:-1:-1;;764:20:3;;;;;-1:-1:-1;;;;794:20:3;-1:-1:-1;;;794:20:3;;;;;;;824:25;830:10;842:6;824:5;:25::i;:::-;569:287;;;;;113:10167;;8229:302;-1:-1:-1;;;;;8304:21:3;;8296:65;;;;;-1:-1:-1;;;8296:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;8387:24;8404:6;8387:12;;:16;;;;;;:24;;;;:::i;:::-;8372:12;:39;-1:-1:-1;;;;;8442:18:3;;:9;:18;;;;;;;;;;;;:30;;8465:6;;8442:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8421:18:3;;:9;:18;;;;;;;;;;;:51;;;;8487:37;;;;;;;8421:18;;:9;;8487:37;;;;;;;;;;8229:302;;:::o;2690:175:1:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:1:o;113:10167:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;113:10167:3;;;-1:-1:-1;113:10167:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/BEP20.sol",
  "type": "contract"
}